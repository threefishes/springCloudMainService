<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.ReconciliationMistakeMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.ReconciliationMistake">
    <id column="mistake_id" jdbcType="INTEGER" property="mistakeId" />
    <result column="orders_sn" jdbcType="VARCHAR" property="ordersSn" />
    <result column="out_orders_sn" jdbcType="VARCHAR" property="outOrdersSn" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="refund_sn" jdbcType="VARCHAR" property="refundSn" />
    <result column="payment_amount" jdbcType="DECIMAL" property="paymentAmount" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="orders_state" jdbcType="INTEGER" property="ordersState" />
    <result column="out_payment_time" jdbcType="TIMESTAMP" property="outPaymentTime" />
    <result column="out_pay_amount" jdbcType="DECIMAL" property="outPayAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mistake_id, orders_sn, out_orders_sn, pay_sn, refund_sn, payment_amount, refund_amount, 
    create_time, payment_time, refund_time, orders_state, out_payment_time, out_pay_amount
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistakeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reconciliation_mistake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reconciliation_mistake
    where mistake_id = #{mistakeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reconciliation_mistake
    where mistake_id = #{mistakeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistakeExample">
    delete from reconciliation_mistake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="mistake_id" keyProperty="mistakeId" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistake" useGeneratedKeys="true">
    insert into reconciliation_mistake (orders_sn, out_orders_sn, pay_sn, 
      refund_sn, payment_amount, refund_amount, 
      create_time, payment_time, refund_time, 
      orders_state, out_payment_time, out_pay_amount
      )
    values (#{ordersSn,jdbcType=VARCHAR}, #{outOrdersSn,jdbcType=VARCHAR}, #{paySn,jdbcType=VARCHAR}, 
      #{refundSn,jdbcType=VARCHAR}, #{paymentAmount,jdbcType=DECIMAL}, #{refundAmount,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{paymentTime,jdbcType=TIMESTAMP}, #{refundTime,jdbcType=TIMESTAMP}, 
      #{ordersState,jdbcType=INTEGER}, #{outPaymentTime,jdbcType=TIMESTAMP}, #{outPayAmount,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" keyColumn="mistake_id" keyProperty="mistakeId" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistake" useGeneratedKeys="true">
    insert into reconciliation_mistake
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordersSn != null">
        orders_sn,
      </if>
      <if test="outOrdersSn != null">
        out_orders_sn,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="refundSn != null">
        refund_sn,
      </if>
      <if test="paymentAmount != null">
        payment_amount,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="ordersState != null">
        orders_state,
      </if>
      <if test="outPaymentTime != null">
        out_payment_time,
      </if>
      <if test="outPayAmount != null">
        out_pay_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordersSn != null">
        #{ordersSn,jdbcType=VARCHAR},
      </if>
      <if test="outOrdersSn != null">
        #{outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="refundSn != null">
        #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null">
        #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersState != null">
        #{ordersState,jdbcType=INTEGER},
      </if>
      <if test="outPaymentTime != null">
        #{outPaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outPayAmount != null">
        #{outPayAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistakeExample" resultType="java.lang.Long">
    select count(*) from reconciliation_mistake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reconciliation_mistake
    <set>
      <if test="record.mistakeId != null">
        mistake_id = #{record.mistakeId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersSn != null">
        orders_sn = #{record.ordersSn,jdbcType=VARCHAR},
      </if>
      <if test="record.outOrdersSn != null">
        out_orders_sn = #{record.outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=VARCHAR},
      </if>
      <if test="record.refundSn != null">
        refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentAmount != null">
        payment_amount = #{record.paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ordersState != null">
        orders_state = #{record.ordersState,jdbcType=INTEGER},
      </if>
      <if test="record.outPaymentTime != null">
        out_payment_time = #{record.outPaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outPayAmount != null">
        out_pay_amount = #{record.outPayAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reconciliation_mistake
    set mistake_id = #{record.mistakeId,jdbcType=INTEGER},
      orders_sn = #{record.ordersSn,jdbcType=VARCHAR},
      out_orders_sn = #{record.outOrdersSn,jdbcType=VARCHAR},
      pay_sn = #{record.paySn,jdbcType=VARCHAR},
      refund_sn = #{record.refundSn,jdbcType=VARCHAR},
      payment_amount = #{record.paymentAmount,jdbcType=DECIMAL},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      orders_state = #{record.ordersState,jdbcType=INTEGER},
      out_payment_time = #{record.outPaymentTime,jdbcType=TIMESTAMP},
      out_pay_amount = #{record.outPayAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistake">
    update reconciliation_mistake
    <set>
      <if test="ordersSn != null">
        orders_sn = #{ordersSn,jdbcType=VARCHAR},
      </if>
      <if test="outOrdersSn != null">
        out_orders_sn = #{outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="paySn != null">
        pay_sn = #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="refundSn != null">
        refund_sn = #{refundSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null">
        payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersState != null">
        orders_state = #{ordersState,jdbcType=INTEGER},
      </if>
      <if test="outPaymentTime != null">
        out_payment_time = #{outPaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outPayAmount != null">
        out_pay_amount = #{outPayAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where mistake_id = #{mistakeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistake">
    update reconciliation_mistake
    set orders_sn = #{ordersSn,jdbcType=VARCHAR},
      out_orders_sn = #{outOrdersSn,jdbcType=VARCHAR},
      pay_sn = #{paySn,jdbcType=VARCHAR},
      refund_sn = #{refundSn,jdbcType=VARCHAR},
      payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      orders_state = #{ordersState,jdbcType=INTEGER},
      out_payment_time = #{outPaymentTime,jdbcType=TIMESTAMP},
      out_pay_amount = #{outPayAmount,jdbcType=DECIMAL}
    where mistake_id = #{mistakeId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.ReconciliationMistakeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reconciliation_mistake
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>