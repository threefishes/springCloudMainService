<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.ContractItemMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.ContractItem">
    <id column="cti_id" jdbcType="INTEGER" property="ctiId" />
    <result column="cti_cost" jdbcType="DECIMAL" property="ctiCost" />
    <result column="cti_describe" jdbcType="VARCHAR" property="ctiDescribe" />
    <result column="cti_descurl" jdbcType="VARCHAR" property="ctiDescurl" />
    <result column="cti_icon" jdbcType="VARCHAR" property="ctiIcon" />
    <result column="cti_name" jdbcType="VARCHAR" property="ctiName" />
    <result column="cti_sort" jdbcType="INTEGER" property="ctiSort" />
    <result column="cti_state" jdbcType="INTEGER" property="ctiState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cti_id, cti_cost, cti_describe, cti_descurl, cti_icon, cti_name, cti_sort, cti_state
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.ContractItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from contract_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract_item
    where cti_id = #{ctiId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contract_item
    where cti_id = #{ctiId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.ContractItemExample">
    delete from contract_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="cti_id" keyProperty="ctiId" parameterType="cn.threefishes.cloudrepository.entity.ContractItem" useGeneratedKeys="true">
    insert into contract_item (cti_cost, cti_describe, cti_descurl, 
      cti_icon, cti_name, cti_sort, 
      cti_state)
    values (#{ctiCost,jdbcType=DECIMAL}, #{ctiDescribe,jdbcType=VARCHAR}, #{ctiDescurl,jdbcType=VARCHAR}, 
      #{ctiIcon,jdbcType=VARCHAR}, #{ctiName,jdbcType=VARCHAR}, #{ctiSort,jdbcType=INTEGER}, 
      #{ctiState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="cti_id" keyProperty="ctiId" parameterType="cn.threefishes.cloudrepository.entity.ContractItem" useGeneratedKeys="true">
    insert into contract_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ctiCost != null">
        cti_cost,
      </if>
      <if test="ctiDescribe != null">
        cti_describe,
      </if>
      <if test="ctiDescurl != null">
        cti_descurl,
      </if>
      <if test="ctiIcon != null">
        cti_icon,
      </if>
      <if test="ctiName != null">
        cti_name,
      </if>
      <if test="ctiSort != null">
        cti_sort,
      </if>
      <if test="ctiState != null">
        cti_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ctiCost != null">
        #{ctiCost,jdbcType=DECIMAL},
      </if>
      <if test="ctiDescribe != null">
        #{ctiDescribe,jdbcType=VARCHAR},
      </if>
      <if test="ctiDescurl != null">
        #{ctiDescurl,jdbcType=VARCHAR},
      </if>
      <if test="ctiIcon != null">
        #{ctiIcon,jdbcType=VARCHAR},
      </if>
      <if test="ctiName != null">
        #{ctiName,jdbcType=VARCHAR},
      </if>
      <if test="ctiSort != null">
        #{ctiSort,jdbcType=INTEGER},
      </if>
      <if test="ctiState != null">
        #{ctiState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.ContractItemExample" resultType="java.lang.Long">
    select count(*) from contract_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract_item
    <set>
      <if test="record.ctiId != null">
        cti_id = #{record.ctiId,jdbcType=INTEGER},
      </if>
      <if test="record.ctiCost != null">
        cti_cost = #{record.ctiCost,jdbcType=DECIMAL},
      </if>
      <if test="record.ctiDescribe != null">
        cti_describe = #{record.ctiDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.ctiDescurl != null">
        cti_descurl = #{record.ctiDescurl,jdbcType=VARCHAR},
      </if>
      <if test="record.ctiIcon != null">
        cti_icon = #{record.ctiIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.ctiName != null">
        cti_name = #{record.ctiName,jdbcType=VARCHAR},
      </if>
      <if test="record.ctiSort != null">
        cti_sort = #{record.ctiSort,jdbcType=INTEGER},
      </if>
      <if test="record.ctiState != null">
        cti_state = #{record.ctiState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract_item
    set cti_id = #{record.ctiId,jdbcType=INTEGER},
      cti_cost = #{record.ctiCost,jdbcType=DECIMAL},
      cti_describe = #{record.ctiDescribe,jdbcType=VARCHAR},
      cti_descurl = #{record.ctiDescurl,jdbcType=VARCHAR},
      cti_icon = #{record.ctiIcon,jdbcType=VARCHAR},
      cti_name = #{record.ctiName,jdbcType=VARCHAR},
      cti_sort = #{record.ctiSort,jdbcType=INTEGER},
      cti_state = #{record.ctiState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.ContractItem">
    update contract_item
    <set>
      <if test="ctiCost != null">
        cti_cost = #{ctiCost,jdbcType=DECIMAL},
      </if>
      <if test="ctiDescribe != null">
        cti_describe = #{ctiDescribe,jdbcType=VARCHAR},
      </if>
      <if test="ctiDescurl != null">
        cti_descurl = #{ctiDescurl,jdbcType=VARCHAR},
      </if>
      <if test="ctiIcon != null">
        cti_icon = #{ctiIcon,jdbcType=VARCHAR},
      </if>
      <if test="ctiName != null">
        cti_name = #{ctiName,jdbcType=VARCHAR},
      </if>
      <if test="ctiSort != null">
        cti_sort = #{ctiSort,jdbcType=INTEGER},
      </if>
      <if test="ctiState != null">
        cti_state = #{ctiState,jdbcType=INTEGER},
      </if>
    </set>
    where cti_id = #{ctiId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.ContractItem">
    update contract_item
    set cti_cost = #{ctiCost,jdbcType=DECIMAL},
      cti_describe = #{ctiDescribe,jdbcType=VARCHAR},
      cti_descurl = #{ctiDescurl,jdbcType=VARCHAR},
      cti_icon = #{ctiIcon,jdbcType=VARCHAR},
      cti_name = #{ctiName,jdbcType=VARCHAR},
      cti_sort = #{ctiSort,jdbcType=INTEGER},
      cti_state = #{ctiState,jdbcType=INTEGER}
    where cti_id = #{ctiId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.ContractItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from contract_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>