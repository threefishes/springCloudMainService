<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.OrdersGoodsMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.OrdersGoods">
    <id column="orders_goods_id" jdbcType="INTEGER" property="ordersGoodsId" />
    <result column="bargain_open_id" jdbcType="INTEGER" property="bargainOpenId" />
    <result column="base_price" jdbcType="DECIMAL" property="basePrice" />
    <result column="bundling_id" jdbcType="INTEGER" property="bundlingId" />
    <result column="buy_num" jdbcType="INTEGER" property="buyNum" />
    <result column="cartgory_id" jdbcType="INTEGER" property="cartgoryId" />
    <result column="category_id_1" jdbcType="INTEGER" property="categoryId1" />
    <result column="category_id_2" jdbcType="INTEGER" property="categoryId2" />
    <result column="category_id_3" jdbcType="INTEGER" property="categoryId3" />
    <result column="commission_rate" jdbcType="INTEGER" property="commissionRate" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="complain_id" jdbcType="INTEGER" property="complainId" />
    <result column="contract" jdbcType="VARCHAR" property="contract" />
    <result column="distribution_orders_id" jdbcType="INTEGER" property="distributionOrdersId" />
    <result column="goods_full_specs" jdbcType="VARCHAR" property="goodsFullSpecs" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_image" jdbcType="VARCHAR" property="goodsImage" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_pay_amount" jdbcType="DECIMAL" property="goodsPayAmount" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_serial" jdbcType="VARCHAR" property="goodsSerial" />
    <result column="goods_type" jdbcType="INTEGER" property="goodsType" />
    <result column="join_big_sale" jdbcType="INTEGER" property="joinBigSale" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="orders_id" jdbcType="INTEGER" property="ordersId" />
    <result column="promotion_title" jdbcType="VARCHAR" property="promotionTitle" />
    <result column="refund_price" jdbcType="DECIMAL" property="refundPrice" />
    <result column="seckill_goods_id" jdbcType="INTEGER" property="seckillGoodsId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="tax_amount" jdbcType="DECIMAL" property="taxAmount" />
    <result column="tax_rate" jdbcType="DECIMAL" property="taxRate" />
    <result column="trys_apply_id" jdbcType="INTEGER" property="trysApplyId" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
    <result column="online_pay_price" jdbcType="DECIMAL" property="onlinePayPrice" />
    <result column="all_online_pay_price" jdbcType="DECIMAL" property="allOnlinePayPrice" />
    <result column="dw_specsid" jdbcType="INTEGER" property="dwSpecsid" />
    <result column="dw_id" jdbcType="INTEGER" property="dwId" />
    <result column="yg_price" jdbcType="DECIMAL" property="ygPrice" />
    <result column="is_tv_goods" jdbcType="INTEGER" property="isTvGoods" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orders_goods_id, bargain_open_id, base_price, bundling_id, buy_num, cartgory_id, 
    category_id_1, category_id_2, category_id_3, commission_rate, common_id, complain_id, 
    contract, distribution_orders_id, goods_full_specs, goods_id, goods_image, goods_name, 
    goods_pay_amount, goods_price, goods_serial, goods_type, join_big_sale, member_id, 
    orders_id, promotion_title, refund_price, seckill_goods_id, store_id, tax_amount, 
    tax_rate, trys_apply_id, unit_name, online_pay_price, all_online_pay_price, dw_specsid, 
    dw_id, yg_price, is_tv_goods
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from orders_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders_goods
    where orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders_goods
    where orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoodsExample">
    delete from orders_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="orders_goods_id" keyProperty="ordersGoodsId" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoods" useGeneratedKeys="true">
    insert into orders_goods (bargain_open_id, base_price, bundling_id, 
      buy_num, cartgory_id, category_id_1, 
      category_id_2, category_id_3, commission_rate, 
      common_id, complain_id, contract, 
      distribution_orders_id, goods_full_specs, goods_id, 
      goods_image, goods_name, goods_pay_amount, 
      goods_price, goods_serial, goods_type, 
      join_big_sale, member_id, orders_id, 
      promotion_title, refund_price, seckill_goods_id, 
      store_id, tax_amount, tax_rate, 
      trys_apply_id, unit_name, online_pay_price, 
      all_online_pay_price, dw_specsid, dw_id, 
      yg_price, is_tv_goods)
    values (#{bargainOpenId,jdbcType=INTEGER}, #{basePrice,jdbcType=DECIMAL}, #{bundlingId,jdbcType=INTEGER}, 
      #{buyNum,jdbcType=INTEGER}, #{cartgoryId,jdbcType=INTEGER}, #{categoryId1,jdbcType=INTEGER}, 
      #{categoryId2,jdbcType=INTEGER}, #{categoryId3,jdbcType=INTEGER}, #{commissionRate,jdbcType=INTEGER}, 
      #{commonId,jdbcType=INTEGER}, #{complainId,jdbcType=INTEGER}, #{contract,jdbcType=VARCHAR}, 
      #{distributionOrdersId,jdbcType=INTEGER}, #{goodsFullSpecs,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsImage,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{goodsPayAmount,jdbcType=DECIMAL}, 
      #{goodsPrice,jdbcType=DECIMAL}, #{goodsSerial,jdbcType=VARCHAR}, #{goodsType,jdbcType=INTEGER}, 
      #{joinBigSale,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{ordersId,jdbcType=INTEGER}, 
      #{promotionTitle,jdbcType=VARCHAR}, #{refundPrice,jdbcType=DECIMAL}, #{seckillGoodsId,jdbcType=INTEGER}, 
      #{storeId,jdbcType=INTEGER}, #{taxAmount,jdbcType=DECIMAL}, #{taxRate,jdbcType=DECIMAL}, 
      #{trysApplyId,jdbcType=INTEGER}, #{unitName,jdbcType=VARCHAR}, #{onlinePayPrice,jdbcType=DECIMAL}, 
      #{allOnlinePayPrice,jdbcType=DECIMAL}, #{dwSpecsid,jdbcType=INTEGER}, #{dwId,jdbcType=INTEGER}, 
      #{ygPrice,jdbcType=DECIMAL}, #{isTvGoods,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="orders_goods_id" keyProperty="ordersGoodsId" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoods" useGeneratedKeys="true">
    insert into orders_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bargainOpenId != null">
        bargain_open_id,
      </if>
      <if test="basePrice != null">
        base_price,
      </if>
      <if test="bundlingId != null">
        bundling_id,
      </if>
      <if test="buyNum != null">
        buy_num,
      </if>
      <if test="cartgoryId != null">
        cartgory_id,
      </if>
      <if test="categoryId1 != null">
        category_id_1,
      </if>
      <if test="categoryId2 != null">
        category_id_2,
      </if>
      <if test="categoryId3 != null">
        category_id_3,
      </if>
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="commonId != null">
        common_id,
      </if>
      <if test="complainId != null">
        complain_id,
      </if>
      <if test="contract != null">
        contract,
      </if>
      <if test="distributionOrdersId != null">
        distribution_orders_id,
      </if>
      <if test="goodsFullSpecs != null">
        goods_full_specs,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsImage != null">
        goods_image,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPayAmount != null">
        goods_pay_amount,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsSerial != null">
        goods_serial,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="joinBigSale != null">
        join_big_sale,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="ordersId != null">
        orders_id,
      </if>
      <if test="promotionTitle != null">
        promotion_title,
      </if>
      <if test="refundPrice != null">
        refund_price,
      </if>
      <if test="seckillGoodsId != null">
        seckill_goods_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="taxAmount != null">
        tax_amount,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="trysApplyId != null">
        trys_apply_id,
      </if>
      <if test="unitName != null">
        unit_name,
      </if>
      <if test="onlinePayPrice != null">
        online_pay_price,
      </if>
      <if test="allOnlinePayPrice != null">
        all_online_pay_price,
      </if>
      <if test="dwSpecsid != null">
        dw_specsid,
      </if>
      <if test="dwId != null">
        dw_id,
      </if>
      <if test="ygPrice != null">
        yg_price,
      </if>
      <if test="isTvGoods != null">
        is_tv_goods,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bargainOpenId != null">
        #{bargainOpenId,jdbcType=INTEGER},
      </if>
      <if test="basePrice != null">
        #{basePrice,jdbcType=DECIMAL},
      </if>
      <if test="bundlingId != null">
        #{bundlingId,jdbcType=INTEGER},
      </if>
      <if test="buyNum != null">
        #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="cartgoryId != null">
        #{cartgoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryId1 != null">
        #{categoryId1,jdbcType=INTEGER},
      </if>
      <if test="categoryId2 != null">
        #{categoryId2,jdbcType=INTEGER},
      </if>
      <if test="categoryId3 != null">
        #{categoryId3,jdbcType=INTEGER},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="complainId != null">
        #{complainId,jdbcType=INTEGER},
      </if>
      <if test="contract != null">
        #{contract,jdbcType=VARCHAR},
      </if>
      <if test="distributionOrdersId != null">
        #{distributionOrdersId,jdbcType=INTEGER},
      </if>
      <if test="goodsFullSpecs != null">
        #{goodsFullSpecs,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null">
        #{goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPayAmount != null">
        #{goodsPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsSerial != null">
        #{goodsSerial,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="joinBigSale != null">
        #{joinBigSale,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="promotionTitle != null">
        #{promotionTitle,jdbcType=VARCHAR},
      </if>
      <if test="refundPrice != null">
        #{refundPrice,jdbcType=DECIMAL},
      </if>
      <if test="seckillGoodsId != null">
        #{seckillGoodsId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="taxAmount != null">
        #{taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="trysApplyId != null">
        #{trysApplyId,jdbcType=INTEGER},
      </if>
      <if test="unitName != null">
        #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="onlinePayPrice != null">
        #{onlinePayPrice,jdbcType=DECIMAL},
      </if>
      <if test="allOnlinePayPrice != null">
        #{allOnlinePayPrice,jdbcType=DECIMAL},
      </if>
      <if test="dwSpecsid != null">
        #{dwSpecsid,jdbcType=INTEGER},
      </if>
      <if test="dwId != null">
        #{dwId,jdbcType=INTEGER},
      </if>
      <if test="ygPrice != null">
        #{ygPrice,jdbcType=DECIMAL},
      </if>
      <if test="isTvGoods != null">
        #{isTvGoods,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoodsExample" resultType="java.lang.Long">
    select count(*) from orders_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders_goods
    <set>
      <if test="record.ordersGoodsId != null">
        orders_goods_id = #{record.ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.bargainOpenId != null">
        bargain_open_id = #{record.bargainOpenId,jdbcType=INTEGER},
      </if>
      <if test="record.basePrice != null">
        base_price = #{record.basePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.bundlingId != null">
        bundling_id = #{record.bundlingId,jdbcType=INTEGER},
      </if>
      <if test="record.buyNum != null">
        buy_num = #{record.buyNum,jdbcType=INTEGER},
      </if>
      <if test="record.cartgoryId != null">
        cartgory_id = #{record.cartgoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId1 != null">
        category_id_1 = #{record.categoryId1,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId2 != null">
        category_id_2 = #{record.categoryId2,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId3 != null">
        category_id_3 = #{record.categoryId3,jdbcType=INTEGER},
      </if>
      <if test="record.commissionRate != null">
        commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.complainId != null">
        complain_id = #{record.complainId,jdbcType=INTEGER},
      </if>
      <if test="record.contract != null">
        contract = #{record.contract,jdbcType=VARCHAR},
      </if>
      <if test="record.distributionOrdersId != null">
        distribution_orders_id = #{record.distributionOrdersId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsFullSpecs != null">
        goods_full_specs = #{record.goodsFullSpecs,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsImage != null">
        goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPayAmount != null">
        goods_pay_amount = #{record.goodsPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsSerial != null">
        goods_serial = #{record.goodsSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsType != null">
        goods_type = #{record.goodsType,jdbcType=INTEGER},
      </if>
      <if test="record.joinBigSale != null">
        join_big_sale = #{record.joinBigSale,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersId != null">
        orders_id = #{record.ordersId,jdbcType=INTEGER},
      </if>
      <if test="record.promotionTitle != null">
        promotion_title = #{record.promotionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.refundPrice != null">
        refund_price = #{record.refundPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.seckillGoodsId != null">
        seckill_goods_id = #{record.seckillGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.taxAmount != null">
        tax_amount = #{record.taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.taxRate != null">
        tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.trysApplyId != null">
        trys_apply_id = #{record.trysApplyId,jdbcType=INTEGER},
      </if>
      <if test="record.unitName != null">
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
      <if test="record.onlinePayPrice != null">
        online_pay_price = #{record.onlinePayPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.allOnlinePayPrice != null">
        all_online_pay_price = #{record.allOnlinePayPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.dwSpecsid != null">
        dw_specsid = #{record.dwSpecsid,jdbcType=INTEGER},
      </if>
      <if test="record.dwId != null">
        dw_id = #{record.dwId,jdbcType=INTEGER},
      </if>
      <if test="record.ygPrice != null">
        yg_price = #{record.ygPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isTvGoods != null">
        is_tv_goods = #{record.isTvGoods,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders_goods
    set orders_goods_id = #{record.ordersGoodsId,jdbcType=INTEGER},
      bargain_open_id = #{record.bargainOpenId,jdbcType=INTEGER},
      base_price = #{record.basePrice,jdbcType=DECIMAL},
      bundling_id = #{record.bundlingId,jdbcType=INTEGER},
      buy_num = #{record.buyNum,jdbcType=INTEGER},
      cartgory_id = #{record.cartgoryId,jdbcType=INTEGER},
      category_id_1 = #{record.categoryId1,jdbcType=INTEGER},
      category_id_2 = #{record.categoryId2,jdbcType=INTEGER},
      category_id_3 = #{record.categoryId3,jdbcType=INTEGER},
      commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      complain_id = #{record.complainId,jdbcType=INTEGER},
      contract = #{record.contract,jdbcType=VARCHAR},
      distribution_orders_id = #{record.distributionOrdersId,jdbcType=INTEGER},
      goods_full_specs = #{record.goodsFullSpecs,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_pay_amount = #{record.goodsPayAmount,jdbcType=DECIMAL},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_serial = #{record.goodsSerial,jdbcType=VARCHAR},
      goods_type = #{record.goodsType,jdbcType=INTEGER},
      join_big_sale = #{record.joinBigSale,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      orders_id = #{record.ordersId,jdbcType=INTEGER},
      promotion_title = #{record.promotionTitle,jdbcType=VARCHAR},
      refund_price = #{record.refundPrice,jdbcType=DECIMAL},
      seckill_goods_id = #{record.seckillGoodsId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      tax_amount = #{record.taxAmount,jdbcType=DECIMAL},
      tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      trys_apply_id = #{record.trysApplyId,jdbcType=INTEGER},
      unit_name = #{record.unitName,jdbcType=VARCHAR},
      online_pay_price = #{record.onlinePayPrice,jdbcType=DECIMAL},
      all_online_pay_price = #{record.allOnlinePayPrice,jdbcType=DECIMAL},
      dw_specsid = #{record.dwSpecsid,jdbcType=INTEGER},
      dw_id = #{record.dwId,jdbcType=INTEGER},
      yg_price = #{record.ygPrice,jdbcType=DECIMAL},
      is_tv_goods = #{record.isTvGoods,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoods">
    update orders_goods
    <set>
      <if test="bargainOpenId != null">
        bargain_open_id = #{bargainOpenId,jdbcType=INTEGER},
      </if>
      <if test="basePrice != null">
        base_price = #{basePrice,jdbcType=DECIMAL},
      </if>
      <if test="bundlingId != null">
        bundling_id = #{bundlingId,jdbcType=INTEGER},
      </if>
      <if test="buyNum != null">
        buy_num = #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="cartgoryId != null">
        cartgory_id = #{cartgoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryId1 != null">
        category_id_1 = #{categoryId1,jdbcType=INTEGER},
      </if>
      <if test="categoryId2 != null">
        category_id_2 = #{categoryId2,jdbcType=INTEGER},
      </if>
      <if test="categoryId3 != null">
        category_id_3 = #{categoryId3,jdbcType=INTEGER},
      </if>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="complainId != null">
        complain_id = #{complainId,jdbcType=INTEGER},
      </if>
      <if test="contract != null">
        contract = #{contract,jdbcType=VARCHAR},
      </if>
      <if test="distributionOrdersId != null">
        distribution_orders_id = #{distributionOrdersId,jdbcType=INTEGER},
      </if>
      <if test="goodsFullSpecs != null">
        goods_full_specs = #{goodsFullSpecs,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null">
        goods_image = #{goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPayAmount != null">
        goods_pay_amount = #{goodsPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsSerial != null">
        goods_serial = #{goodsSerial,jdbcType=VARCHAR},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="joinBigSale != null">
        join_big_sale = #{joinBigSale,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        orders_id = #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="promotionTitle != null">
        promotion_title = #{promotionTitle,jdbcType=VARCHAR},
      </if>
      <if test="refundPrice != null">
        refund_price = #{refundPrice,jdbcType=DECIMAL},
      </if>
      <if test="seckillGoodsId != null">
        seckill_goods_id = #{seckillGoodsId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="taxAmount != null">
        tax_amount = #{taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxRate != null">
        tax_rate = #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="trysApplyId != null">
        trys_apply_id = #{trysApplyId,jdbcType=INTEGER},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="onlinePayPrice != null">
        online_pay_price = #{onlinePayPrice,jdbcType=DECIMAL},
      </if>
      <if test="allOnlinePayPrice != null">
        all_online_pay_price = #{allOnlinePayPrice,jdbcType=DECIMAL},
      </if>
      <if test="dwSpecsid != null">
        dw_specsid = #{dwSpecsid,jdbcType=INTEGER},
      </if>
      <if test="dwId != null">
        dw_id = #{dwId,jdbcType=INTEGER},
      </if>
      <if test="ygPrice != null">
        yg_price = #{ygPrice,jdbcType=DECIMAL},
      </if>
      <if test="isTvGoods != null">
        is_tv_goods = #{isTvGoods,jdbcType=INTEGER},
      </if>
    </set>
    where orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoods">
    update orders_goods
    set bargain_open_id = #{bargainOpenId,jdbcType=INTEGER},
      base_price = #{basePrice,jdbcType=DECIMAL},
      bundling_id = #{bundlingId,jdbcType=INTEGER},
      buy_num = #{buyNum,jdbcType=INTEGER},
      cartgory_id = #{cartgoryId,jdbcType=INTEGER},
      category_id_1 = #{categoryId1,jdbcType=INTEGER},
      category_id_2 = #{categoryId2,jdbcType=INTEGER},
      category_id_3 = #{categoryId3,jdbcType=INTEGER},
      commission_rate = #{commissionRate,jdbcType=INTEGER},
      common_id = #{commonId,jdbcType=INTEGER},
      complain_id = #{complainId,jdbcType=INTEGER},
      contract = #{contract,jdbcType=VARCHAR},
      distribution_orders_id = #{distributionOrdersId,jdbcType=INTEGER},
      goods_full_specs = #{goodsFullSpecs,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_image = #{goodsImage,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_pay_amount = #{goodsPayAmount,jdbcType=DECIMAL},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_serial = #{goodsSerial,jdbcType=VARCHAR},
      goods_type = #{goodsType,jdbcType=INTEGER},
      join_big_sale = #{joinBigSale,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      orders_id = #{ordersId,jdbcType=INTEGER},
      promotion_title = #{promotionTitle,jdbcType=VARCHAR},
      refund_price = #{refundPrice,jdbcType=DECIMAL},
      seckill_goods_id = #{seckillGoodsId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      tax_amount = #{taxAmount,jdbcType=DECIMAL},
      tax_rate = #{taxRate,jdbcType=DECIMAL},
      trys_apply_id = #{trysApplyId,jdbcType=INTEGER},
      unit_name = #{unitName,jdbcType=VARCHAR},
      online_pay_price = #{onlinePayPrice,jdbcType=DECIMAL},
      all_online_pay_price = #{allOnlinePayPrice,jdbcType=DECIMAL},
      dw_specsid = #{dwSpecsid,jdbcType=INTEGER},
      dw_id = #{dwId,jdbcType=INTEGER},
      yg_price = #{ygPrice,jdbcType=DECIMAL},
      is_tv_goods = #{isTvGoods,jdbcType=INTEGER}
    where orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.OrdersGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from orders_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>