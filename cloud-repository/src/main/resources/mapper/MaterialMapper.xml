<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.MaterialMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.Material">
    <id column="material_id" jdbcType="INTEGER" property="materialId" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="material_type" jdbcType="INTEGER" property="materialType" />
    <result column="material_share_type" jdbcType="INTEGER" property="materialShareType" />
    <result column="is_hot" jdbcType="INTEGER" property="isHot" />
    <result column="video_image" jdbcType="VARCHAR" property="videoImage" />
    <result column="is_visible" jdbcType="INTEGER" property="isVisible" />
    <result column="share_num" jdbcType="INTEGER" property="shareNum" />
    <result column="video_album_files_id" jdbcType="INTEGER" property="videoAlbumFilesId" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="is_audit" jdbcType="INTEGER" property="isAudit" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.threefishes.cloudrepository.entity.Material">
    <result column="material_body" jdbcType="LONGVARCHAR" property="materialBody" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    material_id, common_id, member_id, member_name, avatar, images, create_time, video_url, 
    video_id, material_type, material_share_type, is_hot, video_image, is_visible, share_num, 
    video_album_files_id, is_del, is_audit
  </sql>
  <sql id="Blob_Column_List">
    material_body
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.threefishes.cloudrepository.entity.MaterialExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from material
    where material_id = #{materialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from material
    where material_id = #{materialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.MaterialExample">
    delete from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="material_id" keyProperty="materialId" parameterType="cn.threefishes.cloudrepository.entity.Material" useGeneratedKeys="true">
    insert into material (common_id, member_id, member_name, 
      avatar, images, create_time, 
      video_url, video_id, material_type, 
      material_share_type, is_hot, video_image, 
      is_visible, share_num, video_album_files_id, 
      is_del, is_audit, material_body
      )
    values (#{commonId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{videoUrl,jdbcType=VARCHAR}, #{videoId,jdbcType=VARCHAR}, #{materialType,jdbcType=INTEGER}, 
      #{materialShareType,jdbcType=INTEGER}, #{isHot,jdbcType=INTEGER}, #{videoImage,jdbcType=VARCHAR}, 
      #{isVisible,jdbcType=INTEGER}, #{shareNum,jdbcType=INTEGER}, #{videoAlbumFilesId,jdbcType=INTEGER}, 
      #{isDel,jdbcType=INTEGER}, #{isAudit,jdbcType=INTEGER}, #{materialBody,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="material_id" keyProperty="materialId" parameterType="cn.threefishes.cloudrepository.entity.Material" useGeneratedKeys="true">
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commonId != null">
        common_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="materialType != null">
        material_type,
      </if>
      <if test="materialShareType != null">
        material_share_type,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="videoImage != null">
        video_image,
      </if>
      <if test="isVisible != null">
        is_visible,
      </if>
      <if test="shareNum != null">
        share_num,
      </if>
      <if test="videoAlbumFilesId != null">
        video_album_files_id,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="isAudit != null">
        is_audit,
      </if>
      <if test="materialBody != null">
        material_body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        #{materialType,jdbcType=INTEGER},
      </if>
      <if test="materialShareType != null">
        #{materialShareType,jdbcType=INTEGER},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="videoImage != null">
        #{videoImage,jdbcType=VARCHAR},
      </if>
      <if test="isVisible != null">
        #{isVisible,jdbcType=INTEGER},
      </if>
      <if test="shareNum != null">
        #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="videoAlbumFilesId != null">
        #{videoAlbumFilesId,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="isAudit != null">
        #{isAudit,jdbcType=INTEGER},
      </if>
      <if test="materialBody != null">
        #{materialBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.MaterialExample" resultType="java.lang.Long">
    select count(*) from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update material
    <set>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=INTEGER},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null">
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.videoUrl != null">
        video_url = #{record.videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.videoId != null">
        video_id = #{record.videoId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialType != null">
        material_type = #{record.materialType,jdbcType=INTEGER},
      </if>
      <if test="record.materialShareType != null">
        material_share_type = #{record.materialShareType,jdbcType=INTEGER},
      </if>
      <if test="record.isHot != null">
        is_hot = #{record.isHot,jdbcType=INTEGER},
      </if>
      <if test="record.videoImage != null">
        video_image = #{record.videoImage,jdbcType=VARCHAR},
      </if>
      <if test="record.isVisible != null">
        is_visible = #{record.isVisible,jdbcType=INTEGER},
      </if>
      <if test="record.shareNum != null">
        share_num = #{record.shareNum,jdbcType=INTEGER},
      </if>
      <if test="record.videoAlbumFilesId != null">
        video_album_files_id = #{record.videoAlbumFilesId,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.isAudit != null">
        is_audit = #{record.isAudit,jdbcType=INTEGER},
      </if>
      <if test="record.materialBody != null">
        material_body = #{record.materialBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update material
    set material_id = #{record.materialId,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      video_url = #{record.videoUrl,jdbcType=VARCHAR},
      video_id = #{record.videoId,jdbcType=VARCHAR},
      material_type = #{record.materialType,jdbcType=INTEGER},
      material_share_type = #{record.materialShareType,jdbcType=INTEGER},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      video_image = #{record.videoImage,jdbcType=VARCHAR},
      is_visible = #{record.isVisible,jdbcType=INTEGER},
      share_num = #{record.shareNum,jdbcType=INTEGER},
      video_album_files_id = #{record.videoAlbumFilesId,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      is_audit = #{record.isAudit,jdbcType=INTEGER},
      material_body = #{record.materialBody,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update material
    set material_id = #{record.materialId,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      video_url = #{record.videoUrl,jdbcType=VARCHAR},
      video_id = #{record.videoId,jdbcType=VARCHAR},
      material_type = #{record.materialType,jdbcType=INTEGER},
      material_share_type = #{record.materialShareType,jdbcType=INTEGER},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      video_image = #{record.videoImage,jdbcType=VARCHAR},
      is_visible = #{record.isVisible,jdbcType=INTEGER},
      share_num = #{record.shareNum,jdbcType=INTEGER},
      video_album_files_id = #{record.videoAlbumFilesId,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      is_audit = #{record.isAudit,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.Material">
    update material
    <set>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="videoUrl != null">
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null">
        material_type = #{materialType,jdbcType=INTEGER},
      </if>
      <if test="materialShareType != null">
        material_share_type = #{materialShareType,jdbcType=INTEGER},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="videoImage != null">
        video_image = #{videoImage,jdbcType=VARCHAR},
      </if>
      <if test="isVisible != null">
        is_visible = #{isVisible,jdbcType=INTEGER},
      </if>
      <if test="shareNum != null">
        share_num = #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="videoAlbumFilesId != null">
        video_album_files_id = #{videoAlbumFilesId,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="isAudit != null">
        is_audit = #{isAudit,jdbcType=INTEGER},
      </if>
      <if test="materialBody != null">
        material_body = #{materialBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.threefishes.cloudrepository.entity.Material">
    update material
    set common_id = #{commonId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      material_type = #{materialType,jdbcType=INTEGER},
      material_share_type = #{materialShareType,jdbcType=INTEGER},
      is_hot = #{isHot,jdbcType=INTEGER},
      video_image = #{videoImage,jdbcType=VARCHAR},
      is_visible = #{isVisible,jdbcType=INTEGER},
      share_num = #{shareNum,jdbcType=INTEGER},
      video_album_files_id = #{videoAlbumFilesId,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      is_audit = #{isAudit,jdbcType=INTEGER},
      material_body = #{materialBody,jdbcType=LONGVARCHAR}
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.Material">
    update material
    set common_id = #{commonId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      video_id = #{videoId,jdbcType=VARCHAR},
      material_type = #{materialType,jdbcType=INTEGER},
      material_share_type = #{materialShareType,jdbcType=INTEGER},
      is_hot = #{isHot,jdbcType=INTEGER},
      video_image = #{videoImage,jdbcType=VARCHAR},
      is_visible = #{isVisible,jdbcType=INTEGER},
      share_num = #{shareNum,jdbcType=INTEGER},
      video_album_files_id = #{videoAlbumFilesId,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      is_audit = #{isAudit,jdbcType=INTEGER}
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.MaterialExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>