<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.GroupOpenMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.GroupOpen">
    <id column="go_id" jdbcType="INTEGER" property="goId" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="go_state" jdbcType="INTEGER" property="goState" />
    <result column="goods_image" jdbcType="VARCHAR" property="goodsImage" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="group_price" jdbcType="DECIMAL" property="groupPrice" />
    <result column="joined_num" jdbcType="INTEGER" property="joinedNum" />
    <result column="require_num" jdbcType="INTEGER" property="requireNum" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="is_push" jdbcType="INTEGER" property="isPush" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    go_id, common_id, end_time, finish_time, go_state, goods_image, goods_name, goods_price, 
    group_id, group_price, joined_num, require_num, start_time, store_id, is_push
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.GroupOpenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from group_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_open
    where go_id = #{goId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from group_open
    where go_id = #{goId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.GroupOpenExample">
    delete from group_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="go_id" keyProperty="goId" parameterType="cn.threefishes.cloudrepository.entity.GroupOpen" useGeneratedKeys="true">
    insert into group_open (common_id, end_time, finish_time, 
      go_state, goods_image, goods_name, 
      goods_price, group_id, group_price, 
      joined_num, require_num, start_time, 
      store_id, is_push)
    values (#{commonId,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{goState,jdbcType=INTEGER}, #{goodsImage,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsPrice,jdbcType=DECIMAL}, #{groupId,jdbcType=INTEGER}, #{groupPrice,jdbcType=DECIMAL}, 
      #{joinedNum,jdbcType=INTEGER}, #{requireNum,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{storeId,jdbcType=INTEGER}, #{isPush,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="go_id" keyProperty="goId" parameterType="cn.threefishes.cloudrepository.entity.GroupOpen" useGeneratedKeys="true">
    insert into group_open
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commonId != null">
        common_id,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="goState != null">
        go_state,
      </if>
      <if test="goodsImage != null">
        goods_image,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupPrice != null">
        group_price,
      </if>
      <if test="joinedNum != null">
        joined_num,
      </if>
      <if test="requireNum != null">
        require_num,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="isPush != null">
        is_push,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goState != null">
        #{goState,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null">
        #{goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupPrice != null">
        #{groupPrice,jdbcType=DECIMAL},
      </if>
      <if test="joinedNum != null">
        #{joinedNum,jdbcType=INTEGER},
      </if>
      <if test="requireNum != null">
        #{requireNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="isPush != null">
        #{isPush,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.GroupOpenExample" resultType="java.lang.Long">
    select count(*) from group_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update group_open
    <set>
      <if test="record.goId != null">
        go_id = #{record.goId,jdbcType=INTEGER},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goState != null">
        go_state = #{record.goState,jdbcType=INTEGER},
      </if>
      <if test="record.goodsImage != null">
        goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.groupPrice != null">
        group_price = #{record.groupPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.joinedNum != null">
        joined_num = #{record.joinedNum,jdbcType=INTEGER},
      </if>
      <if test="record.requireNum != null">
        require_num = #{record.requireNum,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.isPush != null">
        is_push = #{record.isPush,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update group_open
    set go_id = #{record.goId,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      go_state = #{record.goState,jdbcType=INTEGER},
      goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      group_id = #{record.groupId,jdbcType=INTEGER},
      group_price = #{record.groupPrice,jdbcType=DECIMAL},
      joined_num = #{record.joinedNum,jdbcType=INTEGER},
      require_num = #{record.requireNum,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      store_id = #{record.storeId,jdbcType=INTEGER},
      is_push = #{record.isPush,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.GroupOpen">
    update group_open
    <set>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goState != null">
        go_state = #{goState,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null">
        goods_image = #{goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupPrice != null">
        group_price = #{groupPrice,jdbcType=DECIMAL},
      </if>
      <if test="joinedNum != null">
        joined_num = #{joinedNum,jdbcType=INTEGER},
      </if>
      <if test="requireNum != null">
        require_num = #{requireNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="isPush != null">
        is_push = #{isPush,jdbcType=INTEGER},
      </if>
    </set>
    where go_id = #{goId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.GroupOpen">
    update group_open
    set common_id = #{commonId,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      go_state = #{goState,jdbcType=INTEGER},
      goods_image = #{goodsImage,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      group_id = #{groupId,jdbcType=INTEGER},
      group_price = #{groupPrice,jdbcType=DECIMAL},
      joined_num = #{joinedNum,jdbcType=INTEGER},
      require_num = #{requireNum,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      store_id = #{storeId,jdbcType=INTEGER},
      is_push = #{isPush,jdbcType=INTEGER}
    where go_id = #{goId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.GroupOpenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from group_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>