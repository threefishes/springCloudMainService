<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.RefundBookMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.RefundBook">
    <id column="refund_book_id" jdbcType="INTEGER" property="refundBookId" />
    <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
    <result column="book_step" jdbcType="VARCHAR" property="bookStep" />
    <result column="out_orders_sn" jdbcType="VARCHAR" property="outOrdersSn" />
    <result column="out_refund_id" jdbcType="VARCHAR" property="outRefundId" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="pay_sn" jdbcType="BIGINT" property="paySn" />
    <result column="payment_client_type" jdbcType="VARCHAR" property="paymentClientType" />
    <result column="payment_code" jdbcType="VARCHAR" property="paymentCode" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="refund_id" jdbcType="INTEGER" property="refundId" />
    <result column="refund_sn" jdbcType="BIGINT" property="refundSn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    refund_book_id, batch_no, book_step, out_orders_sn, out_refund_id, pay_amount, pay_sn, 
    payment_client_type, payment_code, payment_time, refund_amount, refund_id, refund_sn
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.RefundBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from refund_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refund_book
    where refund_book_id = #{refundBookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from refund_book
    where refund_book_id = #{refundBookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.RefundBookExample">
    delete from refund_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="refund_book_id" keyProperty="refundBookId" parameterType="cn.threefishes.cloudrepository.entity.RefundBook" useGeneratedKeys="true">
    insert into refund_book (batch_no, book_step, out_orders_sn, 
      out_refund_id, pay_amount, pay_sn, 
      payment_client_type, payment_code, payment_time, 
      refund_amount, refund_id, refund_sn
      )
    values (#{batchNo,jdbcType=VARCHAR}, #{bookStep,jdbcType=VARCHAR}, #{outOrdersSn,jdbcType=VARCHAR}, 
      #{outRefundId,jdbcType=VARCHAR}, #{payAmount,jdbcType=DECIMAL}, #{paySn,jdbcType=BIGINT}, 
      #{paymentClientType,jdbcType=VARCHAR}, #{paymentCode,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{refundAmount,jdbcType=DECIMAL}, #{refundId,jdbcType=INTEGER}, #{refundSn,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" keyColumn="refund_book_id" keyProperty="refundBookId" parameterType="cn.threefishes.cloudrepository.entity.RefundBook" useGeneratedKeys="true">
    insert into refund_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchNo != null">
        batch_no,
      </if>
      <if test="bookStep != null">
        book_step,
      </if>
      <if test="outOrdersSn != null">
        out_orders_sn,
      </if>
      <if test="outRefundId != null">
        out_refund_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="paymentClientType != null">
        payment_client_type,
      </if>
      <if test="paymentCode != null">
        payment_code,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="refundSn != null">
        refund_sn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchNo != null">
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="bookStep != null">
        #{bookStep,jdbcType=VARCHAR},
      </if>
      <if test="outOrdersSn != null">
        #{outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="outRefundId != null">
        #{outRefundId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=BIGINT},
      </if>
      <if test="paymentClientType != null">
        #{paymentClientType,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=INTEGER},
      </if>
      <if test="refundSn != null">
        #{refundSn,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.RefundBookExample" resultType="java.lang.Long">
    select count(*) from refund_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update refund_book
    <set>
      <if test="record.refundBookId != null">
        refund_book_id = #{record.refundBookId,jdbcType=INTEGER},
      </if>
      <if test="record.batchNo != null">
        batch_no = #{record.batchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStep != null">
        book_step = #{record.bookStep,jdbcType=VARCHAR},
      </if>
      <if test="record.outOrdersSn != null">
        out_orders_sn = #{record.outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="record.outRefundId != null">
        out_refund_id = #{record.outRefundId,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=BIGINT},
      </if>
      <if test="record.paymentClientType != null">
        payment_client_type = #{record.paymentClientType,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCode != null">
        payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=INTEGER},
      </if>
      <if test="record.refundSn != null">
        refund_sn = #{record.refundSn,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update refund_book
    set refund_book_id = #{record.refundBookId,jdbcType=INTEGER},
      batch_no = #{record.batchNo,jdbcType=VARCHAR},
      book_step = #{record.bookStep,jdbcType=VARCHAR},
      out_orders_sn = #{record.outOrdersSn,jdbcType=VARCHAR},
      out_refund_id = #{record.outRefundId,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_sn = #{record.paySn,jdbcType=BIGINT},
      payment_client_type = #{record.paymentClientType,jdbcType=VARCHAR},
      payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      refund_id = #{record.refundId,jdbcType=INTEGER},
      refund_sn = #{record.refundSn,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.RefundBook">
    update refund_book
    <set>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="bookStep != null">
        book_step = #{bookStep,jdbcType=VARCHAR},
      </if>
      <if test="outOrdersSn != null">
        out_orders_sn = #{outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="outRefundId != null">
        out_refund_id = #{outRefundId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="paySn != null">
        pay_sn = #{paySn,jdbcType=BIGINT},
      </if>
      <if test="paymentClientType != null">
        payment_client_type = #{paymentClientType,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        payment_code = #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundId != null">
        refund_id = #{refundId,jdbcType=INTEGER},
      </if>
      <if test="refundSn != null">
        refund_sn = #{refundSn,jdbcType=BIGINT},
      </if>
    </set>
    where refund_book_id = #{refundBookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.RefundBook">
    update refund_book
    set batch_no = #{batchNo,jdbcType=VARCHAR},
      book_step = #{bookStep,jdbcType=VARCHAR},
      out_orders_sn = #{outOrdersSn,jdbcType=VARCHAR},
      out_refund_id = #{outRefundId,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_sn = #{paySn,jdbcType=BIGINT},
      payment_client_type = #{paymentClientType,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_id = #{refundId,jdbcType=INTEGER},
      refund_sn = #{refundSn,jdbcType=BIGINT}
    where refund_book_id = #{refundBookId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.RefundBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from refund_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>