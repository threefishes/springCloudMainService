<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.VirtualOrdersGoodsCodeMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCode">
    <id column="orders_code_id" jdbcType="INTEGER" property="ordersCodeId" />
    <result column="commission_rate" jdbcType="INTEGER" property="commissionRate" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="coupon_amount" jdbcType="DECIMAL" property="couponAmount" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
    <result column="goods_full_specs" jdbcType="VARCHAR" property="goodsFullSpecs" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_image" jdbcType="VARCHAR" property="goodsImage" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="orders_goods_id" jdbcType="INTEGER" property="ordersGoodsId" />
    <result column="orders_id" jdbcType="INTEGER" property="ordersId" />
    <result column="orders_sn" jdbcType="BIGINT" property="ordersSn" />
    <result column="pay_price" jdbcType="DECIMAL" property="payPrice" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="use_state" jdbcType="INTEGER" property="useState" />
    <result column="use_time" jdbcType="TIMESTAMP" property="useTime" />
    <result column="virtual_overdue_refund" jdbcType="INTEGER" property="virtualOverdueRefund" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orders_code_id, commission_rate, common_id, coupon_amount, end_time, goods_code, 
    goods_full_specs, goods_id, goods_image, goods_name, goods_price, member_id, member_name, 
    orders_goods_id, orders_id, orders_sn, pay_price, store_id, use_state, use_time, 
    virtual_overdue_refund
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from virtual_orders_goods_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from virtual_orders_goods_code
    where orders_code_id = #{ordersCodeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from virtual_orders_goods_code
    where orders_code_id = #{ordersCodeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCodeExample">
    delete from virtual_orders_goods_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="orders_code_id" keyProperty="ordersCodeId" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCode" useGeneratedKeys="true">
    insert into virtual_orders_goods_code (commission_rate, common_id, coupon_amount, 
      end_time, goods_code, goods_full_specs, 
      goods_id, goods_image, goods_name, 
      goods_price, member_id, member_name, 
      orders_goods_id, orders_id, orders_sn, 
      pay_price, store_id, use_state, 
      use_time, virtual_overdue_refund)
    values (#{commissionRate,jdbcType=INTEGER}, #{commonId,jdbcType=INTEGER}, #{couponAmount,jdbcType=DECIMAL}, 
      #{endTime,jdbcType=TIMESTAMP}, #{goodsCode,jdbcType=VARCHAR}, #{goodsFullSpecs,jdbcType=VARCHAR}, 
      #{goodsId,jdbcType=INTEGER}, #{goodsImage,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsPrice,jdbcType=DECIMAL}, #{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, 
      #{ordersGoodsId,jdbcType=INTEGER}, #{ordersId,jdbcType=INTEGER}, #{ordersSn,jdbcType=BIGINT}, 
      #{payPrice,jdbcType=DECIMAL}, #{storeId,jdbcType=INTEGER}, #{useState,jdbcType=INTEGER}, 
      #{useTime,jdbcType=TIMESTAMP}, #{virtualOverdueRefund,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="orders_code_id" keyProperty="ordersCodeId" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCode" useGeneratedKeys="true">
    insert into virtual_orders_goods_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="commonId != null">
        common_id,
      </if>
      <if test="couponAmount != null">
        coupon_amount,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="goodsCode != null">
        goods_code,
      </if>
      <if test="goodsFullSpecs != null">
        goods_full_specs,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsImage != null">
        goods_image,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="ordersGoodsId != null">
        orders_goods_id,
      </if>
      <if test="ordersId != null">
        orders_id,
      </if>
      <if test="ordersSn != null">
        orders_sn,
      </if>
      <if test="payPrice != null">
        pay_price,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="useState != null">
        use_state,
      </if>
      <if test="useTime != null">
        use_time,
      </if>
      <if test="virtualOverdueRefund != null">
        virtual_overdue_refund,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="couponAmount != null">
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsCode != null">
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsFullSpecs != null">
        #{goodsFullSpecs,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null">
        #{goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="ordersGoodsId != null">
        #{ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="ordersSn != null">
        #{ordersSn,jdbcType=BIGINT},
      </if>
      <if test="payPrice != null">
        #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="useState != null">
        #{useState,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="virtualOverdueRefund != null">
        #{virtualOverdueRefund,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCodeExample" resultType="java.lang.Long">
    select count(*) from virtual_orders_goods_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update virtual_orders_goods_code
    <set>
      <if test="record.ordersCodeId != null">
        orders_code_id = #{record.ordersCodeId,jdbcType=INTEGER},
      </if>
      <if test="record.commissionRate != null">
        commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.couponAmount != null">
        coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsCode != null">
        goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsFullSpecs != null">
        goods_full_specs = #{record.goodsFullSpecs,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsImage != null">
        goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.ordersGoodsId != null">
        orders_goods_id = #{record.ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersId != null">
        orders_id = #{record.ordersId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersSn != null">
        orders_sn = #{record.ordersSn,jdbcType=BIGINT},
      </if>
      <if test="record.payPrice != null">
        pay_price = #{record.payPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.useState != null">
        use_state = #{record.useState,jdbcType=INTEGER},
      </if>
      <if test="record.useTime != null">
        use_time = #{record.useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.virtualOverdueRefund != null">
        virtual_overdue_refund = #{record.virtualOverdueRefund,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update virtual_orders_goods_code
    set orders_code_id = #{record.ordersCodeId,jdbcType=INTEGER},
      commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      goods_full_specs = #{record.goodsFullSpecs,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_image = #{record.goodsImage,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      member_id = #{record.memberId,jdbcType=INTEGER},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      orders_goods_id = #{record.ordersGoodsId,jdbcType=INTEGER},
      orders_id = #{record.ordersId,jdbcType=INTEGER},
      orders_sn = #{record.ordersSn,jdbcType=BIGINT},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      store_id = #{record.storeId,jdbcType=INTEGER},
      use_state = #{record.useState,jdbcType=INTEGER},
      use_time = #{record.useTime,jdbcType=TIMESTAMP},
      virtual_overdue_refund = #{record.virtualOverdueRefund,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCode">
    update virtual_orders_goods_code
    <set>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="couponAmount != null">
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsCode != null">
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsFullSpecs != null">
        goods_full_specs = #{goodsFullSpecs,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsImage != null">
        goods_image = #{goodsImage,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="ordersGoodsId != null">
        orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        orders_id = #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="ordersSn != null">
        orders_sn = #{ordersSn,jdbcType=BIGINT},
      </if>
      <if test="payPrice != null">
        pay_price = #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="useState != null">
        use_state = #{useState,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        use_time = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="virtualOverdueRefund != null">
        virtual_overdue_refund = #{virtualOverdueRefund,jdbcType=INTEGER},
      </if>
    </set>
    where orders_code_id = #{ordersCodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCode">
    update virtual_orders_goods_code
    set commission_rate = #{commissionRate,jdbcType=INTEGER},
      common_id = #{commonId,jdbcType=INTEGER},
      coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_full_specs = #{goodsFullSpecs,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_image = #{goodsImage,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      member_id = #{memberId,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER},
      orders_id = #{ordersId,jdbcType=INTEGER},
      orders_sn = #{ordersSn,jdbcType=BIGINT},
      pay_price = #{payPrice,jdbcType=DECIMAL},
      store_id = #{storeId,jdbcType=INTEGER},
      use_state = #{useState,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=TIMESTAMP},
      virtual_overdue_refund = #{virtualOverdueRefund,jdbcType=INTEGER}
    where orders_code_id = #{ordersCodeId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.VirtualOrdersGoodsCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from virtual_orders_goods_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>