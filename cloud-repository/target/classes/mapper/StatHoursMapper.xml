<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.StatHoursMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.StatHours">
    <id column="stat_id" jdbcType="INTEGER" property="statId" />
    <result column="new_goods_common_num" jdbcType="BIGINT" property="newGoodsCommonNum" />
    <result column="new_member_num" jdbcType="BIGINT" property="newMemberNum" />
    <result column="new_store_num" jdbcType="BIGINT" property="newStoreNum" />
    <result column="orders_amount" jdbcType="DECIMAL" property="ordersAmount" />
    <result column="orders_num" jdbcType="BIGINT" property="ordersNum" />
    <result column="predeposit_balance_amount" jdbcType="DECIMAL" property="predepositBalanceAmount" />
    <result column="predeposit_cash_amount" jdbcType="DECIMAL" property="predepositCashAmount" />
    <result column="predeposit_consume_amount" jdbcType="DECIMAL" property="predepositConsumeAmount" />
    <result column="predeposit_recharge_amount" jdbcType="DECIMAL" property="predepositRechargeAmount" />
    <result column="predeposit_refund_amount" jdbcType="DECIMAL" property="predepositRefundAmount" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="stat_date" jdbcType="TIMESTAMP" property="statDate" />
    <result column="stat_hour" jdbcType="INTEGER" property="statHour" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stat_id, new_goods_common_num, new_member_num, new_store_num, orders_amount, orders_num, 
    predeposit_balance_amount, predeposit_cash_amount, predeposit_consume_amount, predeposit_recharge_amount, 
    predeposit_refund_amount, refund_amount, stat_date, stat_hour
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.StatHoursExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from stat_hours
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stat_hours
    where stat_id = #{statId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stat_hours
    where stat_id = #{statId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.StatHoursExample">
    delete from stat_hours
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="stat_id" keyProperty="statId" parameterType="cn.threefishes.cloudrepository.entity.StatHours" useGeneratedKeys="true">
    insert into stat_hours (new_goods_common_num, new_member_num, new_store_num, 
      orders_amount, orders_num, predeposit_balance_amount, 
      predeposit_cash_amount, predeposit_consume_amount, 
      predeposit_recharge_amount, predeposit_refund_amount, 
      refund_amount, stat_date, stat_hour
      )
    values (#{newGoodsCommonNum,jdbcType=BIGINT}, #{newMemberNum,jdbcType=BIGINT}, #{newStoreNum,jdbcType=BIGINT}, 
      #{ordersAmount,jdbcType=DECIMAL}, #{ordersNum,jdbcType=BIGINT}, #{predepositBalanceAmount,jdbcType=DECIMAL}, 
      #{predepositCashAmount,jdbcType=DECIMAL}, #{predepositConsumeAmount,jdbcType=DECIMAL}, 
      #{predepositRechargeAmount,jdbcType=DECIMAL}, #{predepositRefundAmount,jdbcType=DECIMAL}, 
      #{refundAmount,jdbcType=DECIMAL}, #{statDate,jdbcType=TIMESTAMP}, #{statHour,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="stat_id" keyProperty="statId" parameterType="cn.threefishes.cloudrepository.entity.StatHours" useGeneratedKeys="true">
    insert into stat_hours
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="newGoodsCommonNum != null">
        new_goods_common_num,
      </if>
      <if test="newMemberNum != null">
        new_member_num,
      </if>
      <if test="newStoreNum != null">
        new_store_num,
      </if>
      <if test="ordersAmount != null">
        orders_amount,
      </if>
      <if test="ordersNum != null">
        orders_num,
      </if>
      <if test="predepositBalanceAmount != null">
        predeposit_balance_amount,
      </if>
      <if test="predepositCashAmount != null">
        predeposit_cash_amount,
      </if>
      <if test="predepositConsumeAmount != null">
        predeposit_consume_amount,
      </if>
      <if test="predepositRechargeAmount != null">
        predeposit_recharge_amount,
      </if>
      <if test="predepositRefundAmount != null">
        predeposit_refund_amount,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="statDate != null">
        stat_date,
      </if>
      <if test="statHour != null">
        stat_hour,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="newGoodsCommonNum != null">
        #{newGoodsCommonNum,jdbcType=BIGINT},
      </if>
      <if test="newMemberNum != null">
        #{newMemberNum,jdbcType=BIGINT},
      </if>
      <if test="newStoreNum != null">
        #{newStoreNum,jdbcType=BIGINT},
      </if>
      <if test="ordersAmount != null">
        #{ordersAmount,jdbcType=DECIMAL},
      </if>
      <if test="ordersNum != null">
        #{ordersNum,jdbcType=BIGINT},
      </if>
      <if test="predepositBalanceAmount != null">
        #{predepositBalanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositCashAmount != null">
        #{predepositCashAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositConsumeAmount != null">
        #{predepositConsumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositRechargeAmount != null">
        #{predepositRechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositRefundAmount != null">
        #{predepositRefundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="statDate != null">
        #{statDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statHour != null">
        #{statHour,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.StatHoursExample" resultType="java.lang.Long">
    select count(*) from stat_hours
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stat_hours
    <set>
      <if test="record.statId != null">
        stat_id = #{record.statId,jdbcType=INTEGER},
      </if>
      <if test="record.newGoodsCommonNum != null">
        new_goods_common_num = #{record.newGoodsCommonNum,jdbcType=BIGINT},
      </if>
      <if test="record.newMemberNum != null">
        new_member_num = #{record.newMemberNum,jdbcType=BIGINT},
      </if>
      <if test="record.newStoreNum != null">
        new_store_num = #{record.newStoreNum,jdbcType=BIGINT},
      </if>
      <if test="record.ordersAmount != null">
        orders_amount = #{record.ordersAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.ordersNum != null">
        orders_num = #{record.ordersNum,jdbcType=BIGINT},
      </if>
      <if test="record.predepositBalanceAmount != null">
        predeposit_balance_amount = #{record.predepositBalanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predepositCashAmount != null">
        predeposit_cash_amount = #{record.predepositCashAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predepositConsumeAmount != null">
        predeposit_consume_amount = #{record.predepositConsumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predepositRechargeAmount != null">
        predeposit_recharge_amount = #{record.predepositRechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predepositRefundAmount != null">
        predeposit_refund_amount = #{record.predepositRefundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.statDate != null">
        stat_date = #{record.statDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statHour != null">
        stat_hour = #{record.statHour,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stat_hours
    set stat_id = #{record.statId,jdbcType=INTEGER},
      new_goods_common_num = #{record.newGoodsCommonNum,jdbcType=BIGINT},
      new_member_num = #{record.newMemberNum,jdbcType=BIGINT},
      new_store_num = #{record.newStoreNum,jdbcType=BIGINT},
      orders_amount = #{record.ordersAmount,jdbcType=DECIMAL},
      orders_num = #{record.ordersNum,jdbcType=BIGINT},
      predeposit_balance_amount = #{record.predepositBalanceAmount,jdbcType=DECIMAL},
      predeposit_cash_amount = #{record.predepositCashAmount,jdbcType=DECIMAL},
      predeposit_consume_amount = #{record.predepositConsumeAmount,jdbcType=DECIMAL},
      predeposit_recharge_amount = #{record.predepositRechargeAmount,jdbcType=DECIMAL},
      predeposit_refund_amount = #{record.predepositRefundAmount,jdbcType=DECIMAL},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      stat_date = #{record.statDate,jdbcType=TIMESTAMP},
      stat_hour = #{record.statHour,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.StatHours">
    update stat_hours
    <set>
      <if test="newGoodsCommonNum != null">
        new_goods_common_num = #{newGoodsCommonNum,jdbcType=BIGINT},
      </if>
      <if test="newMemberNum != null">
        new_member_num = #{newMemberNum,jdbcType=BIGINT},
      </if>
      <if test="newStoreNum != null">
        new_store_num = #{newStoreNum,jdbcType=BIGINT},
      </if>
      <if test="ordersAmount != null">
        orders_amount = #{ordersAmount,jdbcType=DECIMAL},
      </if>
      <if test="ordersNum != null">
        orders_num = #{ordersNum,jdbcType=BIGINT},
      </if>
      <if test="predepositBalanceAmount != null">
        predeposit_balance_amount = #{predepositBalanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositCashAmount != null">
        predeposit_cash_amount = #{predepositCashAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositConsumeAmount != null">
        predeposit_consume_amount = #{predepositConsumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositRechargeAmount != null">
        predeposit_recharge_amount = #{predepositRechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="predepositRefundAmount != null">
        predeposit_refund_amount = #{predepositRefundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="statDate != null">
        stat_date = #{statDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statHour != null">
        stat_hour = #{statHour,jdbcType=INTEGER},
      </if>
    </set>
    where stat_id = #{statId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.StatHours">
    update stat_hours
    set new_goods_common_num = #{newGoodsCommonNum,jdbcType=BIGINT},
      new_member_num = #{newMemberNum,jdbcType=BIGINT},
      new_store_num = #{newStoreNum,jdbcType=BIGINT},
      orders_amount = #{ordersAmount,jdbcType=DECIMAL},
      orders_num = #{ordersNum,jdbcType=BIGINT},
      predeposit_balance_amount = #{predepositBalanceAmount,jdbcType=DECIMAL},
      predeposit_cash_amount = #{predepositCashAmount,jdbcType=DECIMAL},
      predeposit_consume_amount = #{predepositConsumeAmount,jdbcType=DECIMAL},
      predeposit_recharge_amount = #{predepositRechargeAmount,jdbcType=DECIMAL},
      predeposit_refund_amount = #{predepositRefundAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      stat_date = #{statDate,jdbcType=TIMESTAMP},
      stat_hour = #{statHour,jdbcType=INTEGER}
    where stat_id = #{statId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.StatHoursExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from stat_hours
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>