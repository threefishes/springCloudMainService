<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.BargainMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.Bargain">
    <id column="bargain_id" jdbcType="INTEGER" property="bargainId" />
    <result column="schedule_state" jdbcType="INTEGER" property="scheduleState" />
    <result column="bargain_storage" jdbcType="INTEGER" property="bargainStorage" />
    <result column="bottom_price" jdbcType="DECIMAL" property="bottomPrice" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="interval_max" jdbcType="DECIMAL" property="intervalMax" />
    <result column="interval_min" jdbcType="DECIMAL" property="intervalMin" />
    <result column="join_number" jdbcType="INTEGER" property="joinNumber" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bargain_id, schedule_state, bargain_storage, bottom_price, common_id, end_time, goods_id, 
    interval_max, interval_min, join_number, start_time
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.BargainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bargain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bargain
    where bargain_id = #{bargainId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bargain
    where bargain_id = #{bargainId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.BargainExample">
    delete from bargain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="bargain_id" keyProperty="bargainId" parameterType="cn.threefishes.cloudrepository.entity.Bargain" useGeneratedKeys="true">
    insert into bargain (schedule_state, bargain_storage, bottom_price, 
      common_id, end_time, goods_id, 
      interval_max, interval_min, join_number, 
      start_time)
    values (#{scheduleState,jdbcType=INTEGER}, #{bargainStorage,jdbcType=INTEGER}, #{bottomPrice,jdbcType=DECIMAL}, 
      #{commonId,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, #{goodsId,jdbcType=INTEGER}, 
      #{intervalMax,jdbcType=DECIMAL}, #{intervalMin,jdbcType=DECIMAL}, #{joinNumber,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="bargain_id" keyProperty="bargainId" parameterType="cn.threefishes.cloudrepository.entity.Bargain" useGeneratedKeys="true">
    insert into bargain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleState != null">
        schedule_state,
      </if>
      <if test="bargainStorage != null">
        bargain_storage,
      </if>
      <if test="bottomPrice != null">
        bottom_price,
      </if>
      <if test="commonId != null">
        common_id,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="intervalMax != null">
        interval_max,
      </if>
      <if test="intervalMin != null">
        interval_min,
      </if>
      <if test="joinNumber != null">
        join_number,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleState != null">
        #{scheduleState,jdbcType=INTEGER},
      </if>
      <if test="bargainStorage != null">
        #{bargainStorage,jdbcType=INTEGER},
      </if>
      <if test="bottomPrice != null">
        #{bottomPrice,jdbcType=DECIMAL},
      </if>
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="intervalMax != null">
        #{intervalMax,jdbcType=DECIMAL},
      </if>
      <if test="intervalMin != null">
        #{intervalMin,jdbcType=DECIMAL},
      </if>
      <if test="joinNumber != null">
        #{joinNumber,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.BargainExample" resultType="java.lang.Long">
    select count(*) from bargain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bargain
    <set>
      <if test="record.bargainId != null">
        bargain_id = #{record.bargainId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleState != null">
        schedule_state = #{record.scheduleState,jdbcType=INTEGER},
      </if>
      <if test="record.bargainStorage != null">
        bargain_storage = #{record.bargainStorage,jdbcType=INTEGER},
      </if>
      <if test="record.bottomPrice != null">
        bottom_price = #{record.bottomPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.intervalMax != null">
        interval_max = #{record.intervalMax,jdbcType=DECIMAL},
      </if>
      <if test="record.intervalMin != null">
        interval_min = #{record.intervalMin,jdbcType=DECIMAL},
      </if>
      <if test="record.joinNumber != null">
        join_number = #{record.joinNumber,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bargain
    set bargain_id = #{record.bargainId,jdbcType=INTEGER},
      schedule_state = #{record.scheduleState,jdbcType=INTEGER},
      bargain_storage = #{record.bargainStorage,jdbcType=INTEGER},
      bottom_price = #{record.bottomPrice,jdbcType=DECIMAL},
      common_id = #{record.commonId,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      interval_max = #{record.intervalMax,jdbcType=DECIMAL},
      interval_min = #{record.intervalMin,jdbcType=DECIMAL},
      join_number = #{record.joinNumber,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.Bargain">
    update bargain
    <set>
      <if test="scheduleState != null">
        schedule_state = #{scheduleState,jdbcType=INTEGER},
      </if>
      <if test="bargainStorage != null">
        bargain_storage = #{bargainStorage,jdbcType=INTEGER},
      </if>
      <if test="bottomPrice != null">
        bottom_price = #{bottomPrice,jdbcType=DECIMAL},
      </if>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="intervalMax != null">
        interval_max = #{intervalMax,jdbcType=DECIMAL},
      </if>
      <if test="intervalMin != null">
        interval_min = #{intervalMin,jdbcType=DECIMAL},
      </if>
      <if test="joinNumber != null">
        join_number = #{joinNumber,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where bargain_id = #{bargainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.Bargain">
    update bargain
    set schedule_state = #{scheduleState,jdbcType=INTEGER},
      bargain_storage = #{bargainStorage,jdbcType=INTEGER},
      bottom_price = #{bottomPrice,jdbcType=DECIMAL},
      common_id = #{commonId,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      goods_id = #{goodsId,jdbcType=INTEGER},
      interval_max = #{intervalMax,jdbcType=DECIMAL},
      interval_min = #{intervalMin,jdbcType=DECIMAL},
      join_number = #{joinNumber,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP}
    where bargain_id = #{bargainId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.BargainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bargain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>