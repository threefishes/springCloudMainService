<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.PaymentMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.Payment">
    <id column="payment_id" jdbcType="INTEGER" property="paymentId" />
    <result column="client_type" jdbcType="VARCHAR" property="clientType" />
    <result column="client_type_text" jdbcType="VARCHAR" property="clientTypeText" />
    <result column="payment_code" jdbcType="VARCHAR" property="paymentCode" />
    <result column="payment_info" jdbcType="VARCHAR" property="paymentInfo" />
    <result column="payment_name" jdbcType="VARCHAR" property="paymentName" />
    <result column="payment_state" jdbcType="INTEGER" property="paymentState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payment_id, client_type, client_type_text, payment_code, payment_info, payment_name, 
    payment_state
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.PaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payment
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.PaymentExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="payment_id" keyProperty="paymentId" parameterType="cn.threefishes.cloudrepository.entity.Payment" useGeneratedKeys="true">
    insert into payment (client_type, client_type_text, payment_code, 
      payment_info, payment_name, payment_state
      )
    values (#{clientType,jdbcType=VARCHAR}, #{clientTypeText,jdbcType=VARCHAR}, #{paymentCode,jdbcType=VARCHAR}, 
      #{paymentInfo,jdbcType=VARCHAR}, #{paymentName,jdbcType=VARCHAR}, #{paymentState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="payment_id" keyProperty="paymentId" parameterType="cn.threefishes.cloudrepository.entity.Payment" useGeneratedKeys="true">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientType != null">
        client_type,
      </if>
      <if test="clientTypeText != null">
        client_type_text,
      </if>
      <if test="paymentCode != null">
        payment_code,
      </if>
      <if test="paymentInfo != null">
        payment_info,
      </if>
      <if test="paymentName != null">
        payment_name,
      </if>
      <if test="paymentState != null">
        payment_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientType != null">
        #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="clientTypeText != null">
        #{clientTypeText,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentInfo != null">
        #{paymentInfo,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentState != null">
        #{paymentState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.PaymentExample" resultType="java.lang.Long">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.paymentId != null">
        payment_id = #{record.paymentId,jdbcType=INTEGER},
      </if>
      <if test="record.clientType != null">
        client_type = #{record.clientType,jdbcType=VARCHAR},
      </if>
      <if test="record.clientTypeText != null">
        client_type_text = #{record.clientTypeText,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCode != null">
        payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentInfo != null">
        payment_info = #{record.paymentInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentName != null">
        payment_name = #{record.paymentName,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentState != null">
        payment_state = #{record.paymentState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set payment_id = #{record.paymentId,jdbcType=INTEGER},
      client_type = #{record.clientType,jdbcType=VARCHAR},
      client_type_text = #{record.clientTypeText,jdbcType=VARCHAR},
      payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      payment_info = #{record.paymentInfo,jdbcType=VARCHAR},
      payment_name = #{record.paymentName,jdbcType=VARCHAR},
      payment_state = #{record.paymentState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.Payment">
    update payment
    <set>
      <if test="clientType != null">
        client_type = #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="clientTypeText != null">
        client_type_text = #{clientTypeText,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        payment_code = #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentInfo != null">
        payment_info = #{paymentInfo,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        payment_name = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentState != null">
        payment_state = #{paymentState,jdbcType=INTEGER},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.Payment">
    update payment
    set client_type = #{clientType,jdbcType=VARCHAR},
      client_type_text = #{clientTypeText,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      payment_info = #{paymentInfo,jdbcType=VARCHAR},
      payment_name = #{paymentName,jdbcType=VARCHAR},
      payment_state = #{paymentState,jdbcType=INTEGER}
    where payment_id = #{paymentId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.PaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>