<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.StoreMobileMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.StoreMobile">
    <id column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="decoration_only" jdbcType="INTEGER" property="decorationOnly" />
    <result column="decoration_state" jdbcType="INTEGER" property="decorationState" />
    <result column="store_banner" jdbcType="VARCHAR" property="storeBanner" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    store_id, decoration_only, decoration_state, store_banner
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.StoreMobileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from store_mobile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from store_mobile
    where store_id = #{storeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_mobile
    where store_id = #{storeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.StoreMobileExample">
    delete from store_mobile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="store_id" keyProperty="storeId" parameterType="cn.threefishes.cloudrepository.entity.StoreMobile" useGeneratedKeys="true">
    insert into store_mobile (decoration_only, decoration_state, 
      store_banner)
    values (#{decorationOnly,jdbcType=INTEGER}, #{decorationState,jdbcType=INTEGER}, 
      #{storeBanner,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="store_id" keyProperty="storeId" parameterType="cn.threefishes.cloudrepository.entity.StoreMobile" useGeneratedKeys="true">
    insert into store_mobile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="decorationOnly != null">
        decoration_only,
      </if>
      <if test="decorationState != null">
        decoration_state,
      </if>
      <if test="storeBanner != null">
        store_banner,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="decorationOnly != null">
        #{decorationOnly,jdbcType=INTEGER},
      </if>
      <if test="decorationState != null">
        #{decorationState,jdbcType=INTEGER},
      </if>
      <if test="storeBanner != null">
        #{storeBanner,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.StoreMobileExample" resultType="java.lang.Long">
    select count(*) from store_mobile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update store_mobile
    <set>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.decorationOnly != null">
        decoration_only = #{record.decorationOnly,jdbcType=INTEGER},
      </if>
      <if test="record.decorationState != null">
        decoration_state = #{record.decorationState,jdbcType=INTEGER},
      </if>
      <if test="record.storeBanner != null">
        store_banner = #{record.storeBanner,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update store_mobile
    set store_id = #{record.storeId,jdbcType=INTEGER},
      decoration_only = #{record.decorationOnly,jdbcType=INTEGER},
      decoration_state = #{record.decorationState,jdbcType=INTEGER},
      store_banner = #{record.storeBanner,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.StoreMobile">
    update store_mobile
    <set>
      <if test="decorationOnly != null">
        decoration_only = #{decorationOnly,jdbcType=INTEGER},
      </if>
      <if test="decorationState != null">
        decoration_state = #{decorationState,jdbcType=INTEGER},
      </if>
      <if test="storeBanner != null">
        store_banner = #{storeBanner,jdbcType=VARCHAR},
      </if>
    </set>
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.StoreMobile">
    update store_mobile
    set decoration_only = #{decorationOnly,jdbcType=INTEGER},
      decoration_state = #{decorationState,jdbcType=INTEGER},
      store_banner = #{storeBanner,jdbcType=VARCHAR}
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.StoreMobileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from store_mobile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>