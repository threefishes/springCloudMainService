<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.BillMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.Bill">
    <id column="bill_id" jdbcType="INTEGER" property="billId" />
    <result column="bill_amount" jdbcType="DECIMAL" property="billAmount" />
    <result column="bill_sn" jdbcType="INTEGER" property="billSn" />
    <result column="bill_state" jdbcType="INTEGER" property="billState" />
    <result column="book_amount" jdbcType="DECIMAL" property="bookAmount" />
    <result column="commission_amount" jdbcType="DECIMAL" property="commissionAmount" />
    <result column="cote_amount" jdbcType="DECIMAL" property="coteAmount" />
    <result column="coupon_amount" jdbcType="DECIMAL" property="couponAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="distribution_amount" jdbcType="DECIMAL" property="distributionAmount" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="freight_amount" jdbcType="DECIMAL" property="freightAmount" />
    <result column="orders_amount" jdbcType="DECIMAL" property="ordersAmount" />
    <result column="payment_note" jdbcType="VARCHAR" property="paymentNote" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="refund_commission_amount" jdbcType="DECIMAL" property="refundCommissionAmount" />
    <result column="refund_coupon_amount" jdbcType="DECIMAL" property="refundCouponAmount" />
    <result column="state_time" jdbcType="TIMESTAMP" property="stateTime" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="all_distribution_amount" jdbcType="DECIMAL" property="allDistributionAmount" />
    <result column="refund_distribution_amount" jdbcType="DECIMAL" property="refundDistributionAmount" />
    <result column="store_up_amount" jdbcType="DECIMAL" property="storeUpAmount" />
    <result column="all_store_up_amount" jdbcType="DECIMAL" property="allStoreUpAmount" />
    <result column="refund_store_up_amount" jdbcType="DECIMAL" property="refundStoreUpAmount" />
    <result column="store_up_orders_amount" jdbcType="DECIMAL" property="storeUpOrdersAmount" />
    <result column="store_up_freight_amount" jdbcType="DECIMAL" property="storeUpFreightAmount" />
    <result column="store_up_commission_amount" jdbcType="DECIMAL" property="storeUpCommissionAmount" />
    <result column="store_up_coupon_amount" jdbcType="DECIMAL" property="storeUpCouponAmount" />
    <result column="store_up_refund_amount" jdbcType="DECIMAL" property="storeUpRefundAmount" />
    <result column="store_up_refund_commission_amount" jdbcType="DECIMAL" property="storeUpRefundCommissionAmount" />
    <result column="store_up_refund_coupon_amount" jdbcType="DECIMAL" property="storeUpRefundCouponAmount" />
    <result column="store_up_bill_amount" jdbcType="DECIMAL" property="storeUpBillAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bill_id, bill_amount, bill_sn, bill_state, book_amount, commission_amount, cote_amount, 
    coupon_amount, create_time, distribution_amount, end_time, freight_amount, orders_amount, 
    payment_note, payment_time, refund_amount, refund_commission_amount, refund_coupon_amount, 
    state_time, store_id, store_name, all_distribution_amount, refund_distribution_amount, 
    store_up_amount, all_store_up_amount, refund_store_up_amount, store_up_orders_amount, 
    store_up_freight_amount, store_up_commission_amount, store_up_coupon_amount, store_up_refund_amount, 
    store_up_refund_commission_amount, store_up_refund_coupon_amount, store_up_bill_amount
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bill
    where bill_id = #{billId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill
    where bill_id = #{billId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.BillExample">
    delete from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="bill_id" keyProperty="billId" parameterType="cn.threefishes.cloudrepository.entity.Bill" useGeneratedKeys="true">
    insert into bill (bill_amount, bill_sn, bill_state, 
      book_amount, commission_amount, cote_amount, 
      coupon_amount, create_time, distribution_amount, 
      end_time, freight_amount, orders_amount, 
      payment_note, payment_time, refund_amount, 
      refund_commission_amount, refund_coupon_amount, 
      state_time, store_id, store_name, 
      all_distribution_amount, refund_distribution_amount, 
      store_up_amount, all_store_up_amount, refund_store_up_amount, 
      store_up_orders_amount, store_up_freight_amount, 
      store_up_commission_amount, store_up_coupon_amount, 
      store_up_refund_amount, store_up_refund_commission_amount, 
      store_up_refund_coupon_amount, store_up_bill_amount
      )
    values (#{billAmount,jdbcType=DECIMAL}, #{billSn,jdbcType=INTEGER}, #{billState,jdbcType=INTEGER}, 
      #{bookAmount,jdbcType=DECIMAL}, #{commissionAmount,jdbcType=DECIMAL}, #{coteAmount,jdbcType=DECIMAL}, 
      #{couponAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{distributionAmount,jdbcType=DECIMAL}, 
      #{endTime,jdbcType=TIMESTAMP}, #{freightAmount,jdbcType=DECIMAL}, #{ordersAmount,jdbcType=DECIMAL}, 
      #{paymentNote,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, #{refundAmount,jdbcType=DECIMAL}, 
      #{refundCommissionAmount,jdbcType=DECIMAL}, #{refundCouponAmount,jdbcType=DECIMAL}, 
      #{stateTime,jdbcType=TIMESTAMP}, #{storeId,jdbcType=INTEGER}, #{storeName,jdbcType=VARCHAR}, 
      #{allDistributionAmount,jdbcType=DECIMAL}, #{refundDistributionAmount,jdbcType=DECIMAL}, 
      #{storeUpAmount,jdbcType=DECIMAL}, #{allStoreUpAmount,jdbcType=DECIMAL}, #{refundStoreUpAmount,jdbcType=DECIMAL}, 
      #{storeUpOrdersAmount,jdbcType=DECIMAL}, #{storeUpFreightAmount,jdbcType=DECIMAL}, 
      #{storeUpCommissionAmount,jdbcType=DECIMAL}, #{storeUpCouponAmount,jdbcType=DECIMAL}, 
      #{storeUpRefundAmount,jdbcType=DECIMAL}, #{storeUpRefundCommissionAmount,jdbcType=DECIMAL}, 
      #{storeUpRefundCouponAmount,jdbcType=DECIMAL}, #{storeUpBillAmount,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" keyColumn="bill_id" keyProperty="billId" parameterType="cn.threefishes.cloudrepository.entity.Bill" useGeneratedKeys="true">
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billAmount != null">
        bill_amount,
      </if>
      <if test="billSn != null">
        bill_sn,
      </if>
      <if test="billState != null">
        bill_state,
      </if>
      <if test="bookAmount != null">
        book_amount,
      </if>
      <if test="commissionAmount != null">
        commission_amount,
      </if>
      <if test="coteAmount != null">
        cote_amount,
      </if>
      <if test="couponAmount != null">
        coupon_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="distributionAmount != null">
        distribution_amount,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="freightAmount != null">
        freight_amount,
      </if>
      <if test="ordersAmount != null">
        orders_amount,
      </if>
      <if test="paymentNote != null">
        payment_note,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundCommissionAmount != null">
        refund_commission_amount,
      </if>
      <if test="refundCouponAmount != null">
        refund_coupon_amount,
      </if>
      <if test="stateTime != null">
        state_time,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="allDistributionAmount != null">
        all_distribution_amount,
      </if>
      <if test="refundDistributionAmount != null">
        refund_distribution_amount,
      </if>
      <if test="storeUpAmount != null">
        store_up_amount,
      </if>
      <if test="allStoreUpAmount != null">
        all_store_up_amount,
      </if>
      <if test="refundStoreUpAmount != null">
        refund_store_up_amount,
      </if>
      <if test="storeUpOrdersAmount != null">
        store_up_orders_amount,
      </if>
      <if test="storeUpFreightAmount != null">
        store_up_freight_amount,
      </if>
      <if test="storeUpCommissionAmount != null">
        store_up_commission_amount,
      </if>
      <if test="storeUpCouponAmount != null">
        store_up_coupon_amount,
      </if>
      <if test="storeUpRefundAmount != null">
        store_up_refund_amount,
      </if>
      <if test="storeUpRefundCommissionAmount != null">
        store_up_refund_commission_amount,
      </if>
      <if test="storeUpRefundCouponAmount != null">
        store_up_refund_coupon_amount,
      </if>
      <if test="storeUpBillAmount != null">
        store_up_bill_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billAmount != null">
        #{billAmount,jdbcType=DECIMAL},
      </if>
      <if test="billSn != null">
        #{billSn,jdbcType=INTEGER},
      </if>
      <if test="billState != null">
        #{billState,jdbcType=INTEGER},
      </if>
      <if test="bookAmount != null">
        #{bookAmount,jdbcType=DECIMAL},
      </if>
      <if test="commissionAmount != null">
        #{commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="coteAmount != null">
        #{coteAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null">
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="distributionAmount != null">
        #{distributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="freightAmount != null">
        #{freightAmount,jdbcType=DECIMAL},
      </if>
      <if test="ordersAmount != null">
        #{ordersAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentNote != null">
        #{paymentNote,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundCommissionAmount != null">
        #{refundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundCouponAmount != null">
        #{refundCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="stateTime != null">
        #{stateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="allDistributionAmount != null">
        #{allDistributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundDistributionAmount != null">
        #{refundDistributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpAmount != null">
        #{storeUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="allStoreUpAmount != null">
        #{allStoreUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundStoreUpAmount != null">
        #{refundStoreUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpOrdersAmount != null">
        #{storeUpOrdersAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpFreightAmount != null">
        #{storeUpFreightAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpCommissionAmount != null">
        #{storeUpCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpCouponAmount != null">
        #{storeUpCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpRefundAmount != null">
        #{storeUpRefundAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpRefundCommissionAmount != null">
        #{storeUpRefundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpRefundCouponAmount != null">
        #{storeUpRefundCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpBillAmount != null">
        #{storeUpBillAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.BillExample" resultType="java.lang.Long">
    select count(*) from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bill
    <set>
      <if test="record.billId != null">
        bill_id = #{record.billId,jdbcType=INTEGER},
      </if>
      <if test="record.billAmount != null">
        bill_amount = #{record.billAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.billSn != null">
        bill_sn = #{record.billSn,jdbcType=INTEGER},
      </if>
      <if test="record.billState != null">
        bill_state = #{record.billState,jdbcType=INTEGER},
      </if>
      <if test="record.bookAmount != null">
        book_amount = #{record.bookAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.commissionAmount != null">
        commission_amount = #{record.commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.coteAmount != null">
        cote_amount = #{record.coteAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponAmount != null">
        coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.distributionAmount != null">
        distribution_amount = #{record.distributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.freightAmount != null">
        freight_amount = #{record.freightAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.ordersAmount != null">
        orders_amount = #{record.ordersAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentNote != null">
        payment_note = #{record.paymentNote,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundCommissionAmount != null">
        refund_commission_amount = #{record.refundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundCouponAmount != null">
        refund_coupon_amount = #{record.refundCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.stateTime != null">
        state_time = #{record.stateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.allDistributionAmount != null">
        all_distribution_amount = #{record.allDistributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundDistributionAmount != null">
        refund_distribution_amount = #{record.refundDistributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpAmount != null">
        store_up_amount = #{record.storeUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.allStoreUpAmount != null">
        all_store_up_amount = #{record.allStoreUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundStoreUpAmount != null">
        refund_store_up_amount = #{record.refundStoreUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpOrdersAmount != null">
        store_up_orders_amount = #{record.storeUpOrdersAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpFreightAmount != null">
        store_up_freight_amount = #{record.storeUpFreightAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpCommissionAmount != null">
        store_up_commission_amount = #{record.storeUpCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpCouponAmount != null">
        store_up_coupon_amount = #{record.storeUpCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpRefundAmount != null">
        store_up_refund_amount = #{record.storeUpRefundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpRefundCommissionAmount != null">
        store_up_refund_commission_amount = #{record.storeUpRefundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpRefundCouponAmount != null">
        store_up_refund_coupon_amount = #{record.storeUpRefundCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeUpBillAmount != null">
        store_up_bill_amount = #{record.storeUpBillAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bill
    set bill_id = #{record.billId,jdbcType=INTEGER},
      bill_amount = #{record.billAmount,jdbcType=DECIMAL},
      bill_sn = #{record.billSn,jdbcType=INTEGER},
      bill_state = #{record.billState,jdbcType=INTEGER},
      book_amount = #{record.bookAmount,jdbcType=DECIMAL},
      commission_amount = #{record.commissionAmount,jdbcType=DECIMAL},
      cote_amount = #{record.coteAmount,jdbcType=DECIMAL},
      coupon_amount = #{record.couponAmount,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      distribution_amount = #{record.distributionAmount,jdbcType=DECIMAL},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      freight_amount = #{record.freightAmount,jdbcType=DECIMAL},
      orders_amount = #{record.ordersAmount,jdbcType=DECIMAL},
      payment_note = #{record.paymentNote,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      refund_commission_amount = #{record.refundCommissionAmount,jdbcType=DECIMAL},
      refund_coupon_amount = #{record.refundCouponAmount,jdbcType=DECIMAL},
      state_time = #{record.stateTime,jdbcType=TIMESTAMP},
      store_id = #{record.storeId,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      all_distribution_amount = #{record.allDistributionAmount,jdbcType=DECIMAL},
      refund_distribution_amount = #{record.refundDistributionAmount,jdbcType=DECIMAL},
      store_up_amount = #{record.storeUpAmount,jdbcType=DECIMAL},
      all_store_up_amount = #{record.allStoreUpAmount,jdbcType=DECIMAL},
      refund_store_up_amount = #{record.refundStoreUpAmount,jdbcType=DECIMAL},
      store_up_orders_amount = #{record.storeUpOrdersAmount,jdbcType=DECIMAL},
      store_up_freight_amount = #{record.storeUpFreightAmount,jdbcType=DECIMAL},
      store_up_commission_amount = #{record.storeUpCommissionAmount,jdbcType=DECIMAL},
      store_up_coupon_amount = #{record.storeUpCouponAmount,jdbcType=DECIMAL},
      store_up_refund_amount = #{record.storeUpRefundAmount,jdbcType=DECIMAL},
      store_up_refund_commission_amount = #{record.storeUpRefundCommissionAmount,jdbcType=DECIMAL},
      store_up_refund_coupon_amount = #{record.storeUpRefundCouponAmount,jdbcType=DECIMAL},
      store_up_bill_amount = #{record.storeUpBillAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.Bill">
    update bill
    <set>
      <if test="billAmount != null">
        bill_amount = #{billAmount,jdbcType=DECIMAL},
      </if>
      <if test="billSn != null">
        bill_sn = #{billSn,jdbcType=INTEGER},
      </if>
      <if test="billState != null">
        bill_state = #{billState,jdbcType=INTEGER},
      </if>
      <if test="bookAmount != null">
        book_amount = #{bookAmount,jdbcType=DECIMAL},
      </if>
      <if test="commissionAmount != null">
        commission_amount = #{commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="coteAmount != null">
        cote_amount = #{coteAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null">
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="distributionAmount != null">
        distribution_amount = #{distributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="freightAmount != null">
        freight_amount = #{freightAmount,jdbcType=DECIMAL},
      </if>
      <if test="ordersAmount != null">
        orders_amount = #{ordersAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentNote != null">
        payment_note = #{paymentNote,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundCommissionAmount != null">
        refund_commission_amount = #{refundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundCouponAmount != null">
        refund_coupon_amount = #{refundCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="stateTime != null">
        state_time = #{stateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="allDistributionAmount != null">
        all_distribution_amount = #{allDistributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundDistributionAmount != null">
        refund_distribution_amount = #{refundDistributionAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpAmount != null">
        store_up_amount = #{storeUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="allStoreUpAmount != null">
        all_store_up_amount = #{allStoreUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundStoreUpAmount != null">
        refund_store_up_amount = #{refundStoreUpAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpOrdersAmount != null">
        store_up_orders_amount = #{storeUpOrdersAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpFreightAmount != null">
        store_up_freight_amount = #{storeUpFreightAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpCommissionAmount != null">
        store_up_commission_amount = #{storeUpCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpCouponAmount != null">
        store_up_coupon_amount = #{storeUpCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpRefundAmount != null">
        store_up_refund_amount = #{storeUpRefundAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpRefundCommissionAmount != null">
        store_up_refund_commission_amount = #{storeUpRefundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpRefundCouponAmount != null">
        store_up_refund_coupon_amount = #{storeUpRefundCouponAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeUpBillAmount != null">
        store_up_bill_amount = #{storeUpBillAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where bill_id = #{billId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.Bill">
    update bill
    set bill_amount = #{billAmount,jdbcType=DECIMAL},
      bill_sn = #{billSn,jdbcType=INTEGER},
      bill_state = #{billState,jdbcType=INTEGER},
      book_amount = #{bookAmount,jdbcType=DECIMAL},
      commission_amount = #{commissionAmount,jdbcType=DECIMAL},
      cote_amount = #{coteAmount,jdbcType=DECIMAL},
      coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      distribution_amount = #{distributionAmount,jdbcType=DECIMAL},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      freight_amount = #{freightAmount,jdbcType=DECIMAL},
      orders_amount = #{ordersAmount,jdbcType=DECIMAL},
      payment_note = #{paymentNote,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_commission_amount = #{refundCommissionAmount,jdbcType=DECIMAL},
      refund_coupon_amount = #{refundCouponAmount,jdbcType=DECIMAL},
      state_time = #{stateTime,jdbcType=TIMESTAMP},
      store_id = #{storeId,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR},
      all_distribution_amount = #{allDistributionAmount,jdbcType=DECIMAL},
      refund_distribution_amount = #{refundDistributionAmount,jdbcType=DECIMAL},
      store_up_amount = #{storeUpAmount,jdbcType=DECIMAL},
      all_store_up_amount = #{allStoreUpAmount,jdbcType=DECIMAL},
      refund_store_up_amount = #{refundStoreUpAmount,jdbcType=DECIMAL},
      store_up_orders_amount = #{storeUpOrdersAmount,jdbcType=DECIMAL},
      store_up_freight_amount = #{storeUpFreightAmount,jdbcType=DECIMAL},
      store_up_commission_amount = #{storeUpCommissionAmount,jdbcType=DECIMAL},
      store_up_coupon_amount = #{storeUpCouponAmount,jdbcType=DECIMAL},
      store_up_refund_amount = #{storeUpRefundAmount,jdbcType=DECIMAL},
      store_up_refund_commission_amount = #{storeUpRefundCommissionAmount,jdbcType=DECIMAL},
      store_up_refund_coupon_amount = #{storeUpRefundCouponAmount,jdbcType=DECIMAL},
      store_up_bill_amount = #{storeUpBillAmount,jdbcType=DECIMAL}
    where bill_id = #{billId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>