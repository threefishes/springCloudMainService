<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.OrdersBookMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.OrdersBook">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_amount" jdbcType="DECIMAL" property="bookAmount" />
    <result column="book_cancel_time" jdbcType="TIMESTAMP" property="bookCancelTime" />
    <result column="book_phone" jdbcType="VARCHAR" property="bookPhone" />
    <result column="book_step" jdbcType="INTEGER" property="bookStep" />
    <result column="cancel_state" jdbcType="INTEGER" property="cancelState" />
    <result column="deposit_amount" jdbcType="DECIMAL" property="depositAmount" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="notice_state" jdbcType="INTEGER" property="noticeState" />
    <result column="orders_id" jdbcType="INTEGER" property="ordersId" />
    <result column="orders_sn" jdbcType="BIGINT" property="ordersSn" />
    <result column="out_orders_sn" jdbcType="VARCHAR" property="outOrdersSn" />
    <result column="pay_id" jdbcType="INTEGER" property="payId" />
    <result column="pay_sn" jdbcType="BIGINT" property="paySn" />
    <result column="payment_client_type" jdbcType="VARCHAR" property="paymentClientType" />
    <result column="payment_code" jdbcType="VARCHAR" property="paymentCode" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="predeposit_amount" jdbcType="DECIMAL" property="predepositAmount" />
    <result column="real_pay_amount" jdbcType="DECIMAL" property="realPayAmount" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="happy_gold_amount" jdbcType="DECIMAL" property="happyGoldAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, book_amount, book_cancel_time, book_phone, book_step, cancel_state, deposit_amount, 
    end_time, notice_state, orders_id, orders_sn, out_orders_sn, pay_id, pay_sn, payment_client_type, 
    payment_code, payment_time, predeposit_amount, real_pay_amount, store_id, happy_gold_amount
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.OrdersBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from orders_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.OrdersBookExample">
    delete from orders_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="book_id" keyProperty="bookId" parameterType="cn.threefishes.cloudrepository.entity.OrdersBook" useGeneratedKeys="true">
    insert into orders_book (book_amount, book_cancel_time, book_phone, 
      book_step, cancel_state, deposit_amount, 
      end_time, notice_state, orders_id, 
      orders_sn, out_orders_sn, pay_id, 
      pay_sn, payment_client_type, payment_code, 
      payment_time, predeposit_amount, real_pay_amount, 
      store_id, happy_gold_amount)
    values (#{bookAmount,jdbcType=DECIMAL}, #{bookCancelTime,jdbcType=TIMESTAMP}, #{bookPhone,jdbcType=VARCHAR}, 
      #{bookStep,jdbcType=INTEGER}, #{cancelState,jdbcType=INTEGER}, #{depositAmount,jdbcType=DECIMAL}, 
      #{endTime,jdbcType=TIMESTAMP}, #{noticeState,jdbcType=INTEGER}, #{ordersId,jdbcType=INTEGER}, 
      #{ordersSn,jdbcType=BIGINT}, #{outOrdersSn,jdbcType=VARCHAR}, #{payId,jdbcType=INTEGER}, 
      #{paySn,jdbcType=BIGINT}, #{paymentClientType,jdbcType=VARCHAR}, #{paymentCode,jdbcType=VARCHAR}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{predepositAmount,jdbcType=DECIMAL}, #{realPayAmount,jdbcType=DECIMAL}, 
      #{storeId,jdbcType=INTEGER}, #{happyGoldAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="book_id" keyProperty="bookId" parameterType="cn.threefishes.cloudrepository.entity.OrdersBook" useGeneratedKeys="true">
    insert into orders_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookAmount != null">
        book_amount,
      </if>
      <if test="bookCancelTime != null">
        book_cancel_time,
      </if>
      <if test="bookPhone != null">
        book_phone,
      </if>
      <if test="bookStep != null">
        book_step,
      </if>
      <if test="cancelState != null">
        cancel_state,
      </if>
      <if test="depositAmount != null">
        deposit_amount,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="noticeState != null">
        notice_state,
      </if>
      <if test="ordersId != null">
        orders_id,
      </if>
      <if test="ordersSn != null">
        orders_sn,
      </if>
      <if test="outOrdersSn != null">
        out_orders_sn,
      </if>
      <if test="payId != null">
        pay_id,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="paymentClientType != null">
        payment_client_type,
      </if>
      <if test="paymentCode != null">
        payment_code,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="predepositAmount != null">
        predeposit_amount,
      </if>
      <if test="realPayAmount != null">
        real_pay_amount,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="happyGoldAmount != null">
        happy_gold_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookAmount != null">
        #{bookAmount,jdbcType=DECIMAL},
      </if>
      <if test="bookCancelTime != null">
        #{bookCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookPhone != null">
        #{bookPhone,jdbcType=VARCHAR},
      </if>
      <if test="bookStep != null">
        #{bookStep,jdbcType=INTEGER},
      </if>
      <if test="cancelState != null">
        #{cancelState,jdbcType=INTEGER},
      </if>
      <if test="depositAmount != null">
        #{depositAmount,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeState != null">
        #{noticeState,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="ordersSn != null">
        #{ordersSn,jdbcType=BIGINT},
      </if>
      <if test="outOrdersSn != null">
        #{outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=INTEGER},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=BIGINT},
      </if>
      <if test="paymentClientType != null">
        #{paymentClientType,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="predepositAmount != null">
        #{predepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="realPayAmount != null">
        #{realPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="happyGoldAmount != null">
        #{happyGoldAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.OrdersBookExample" resultType="java.lang.Long">
    select count(*) from orders_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders_book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookAmount != null">
        book_amount = #{record.bookAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.bookCancelTime != null">
        book_cancel_time = #{record.bookCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookPhone != null">
        book_phone = #{record.bookPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStep != null">
        book_step = #{record.bookStep,jdbcType=INTEGER},
      </if>
      <if test="record.cancelState != null">
        cancel_state = #{record.cancelState,jdbcType=INTEGER},
      </if>
      <if test="record.depositAmount != null">
        deposit_amount = #{record.depositAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noticeState != null">
        notice_state = #{record.noticeState,jdbcType=INTEGER},
      </if>
      <if test="record.ordersId != null">
        orders_id = #{record.ordersId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersSn != null">
        orders_sn = #{record.ordersSn,jdbcType=BIGINT},
      </if>
      <if test="record.outOrdersSn != null">
        out_orders_sn = #{record.outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="record.payId != null">
        pay_id = #{record.payId,jdbcType=INTEGER},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=BIGINT},
      </if>
      <if test="record.paymentClientType != null">
        payment_client_type = #{record.paymentClientType,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCode != null">
        payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.predepositAmount != null">
        predeposit_amount = #{record.predepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realPayAmount != null">
        real_pay_amount = #{record.realPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.happyGoldAmount != null">
        happy_gold_amount = #{record.happyGoldAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders_book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      book_amount = #{record.bookAmount,jdbcType=DECIMAL},
      book_cancel_time = #{record.bookCancelTime,jdbcType=TIMESTAMP},
      book_phone = #{record.bookPhone,jdbcType=VARCHAR},
      book_step = #{record.bookStep,jdbcType=INTEGER},
      cancel_state = #{record.cancelState,jdbcType=INTEGER},
      deposit_amount = #{record.depositAmount,jdbcType=DECIMAL},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      notice_state = #{record.noticeState,jdbcType=INTEGER},
      orders_id = #{record.ordersId,jdbcType=INTEGER},
      orders_sn = #{record.ordersSn,jdbcType=BIGINT},
      out_orders_sn = #{record.outOrdersSn,jdbcType=VARCHAR},
      pay_id = #{record.payId,jdbcType=INTEGER},
      pay_sn = #{record.paySn,jdbcType=BIGINT},
      payment_client_type = #{record.paymentClientType,jdbcType=VARCHAR},
      payment_code = #{record.paymentCode,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      predeposit_amount = #{record.predepositAmount,jdbcType=DECIMAL},
      real_pay_amount = #{record.realPayAmount,jdbcType=DECIMAL},
      store_id = #{record.storeId,jdbcType=INTEGER},
      happy_gold_amount = #{record.happyGoldAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.OrdersBook">
    update orders_book
    <set>
      <if test="bookAmount != null">
        book_amount = #{bookAmount,jdbcType=DECIMAL},
      </if>
      <if test="bookCancelTime != null">
        book_cancel_time = #{bookCancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookPhone != null">
        book_phone = #{bookPhone,jdbcType=VARCHAR},
      </if>
      <if test="bookStep != null">
        book_step = #{bookStep,jdbcType=INTEGER},
      </if>
      <if test="cancelState != null">
        cancel_state = #{cancelState,jdbcType=INTEGER},
      </if>
      <if test="depositAmount != null">
        deposit_amount = #{depositAmount,jdbcType=DECIMAL},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeState != null">
        notice_state = #{noticeState,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        orders_id = #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="ordersSn != null">
        orders_sn = #{ordersSn,jdbcType=BIGINT},
      </if>
      <if test="outOrdersSn != null">
        out_orders_sn = #{outOrdersSn,jdbcType=VARCHAR},
      </if>
      <if test="payId != null">
        pay_id = #{payId,jdbcType=INTEGER},
      </if>
      <if test="paySn != null">
        pay_sn = #{paySn,jdbcType=BIGINT},
      </if>
      <if test="paymentClientType != null">
        payment_client_type = #{paymentClientType,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        payment_code = #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="predepositAmount != null">
        predeposit_amount = #{predepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="realPayAmount != null">
        real_pay_amount = #{realPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="happyGoldAmount != null">
        happy_gold_amount = #{happyGoldAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.OrdersBook">
    update orders_book
    set book_amount = #{bookAmount,jdbcType=DECIMAL},
      book_cancel_time = #{bookCancelTime,jdbcType=TIMESTAMP},
      book_phone = #{bookPhone,jdbcType=VARCHAR},
      book_step = #{bookStep,jdbcType=INTEGER},
      cancel_state = #{cancelState,jdbcType=INTEGER},
      deposit_amount = #{depositAmount,jdbcType=DECIMAL},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      notice_state = #{noticeState,jdbcType=INTEGER},
      orders_id = #{ordersId,jdbcType=INTEGER},
      orders_sn = #{ordersSn,jdbcType=BIGINT},
      out_orders_sn = #{outOrdersSn,jdbcType=VARCHAR},
      pay_id = #{payId,jdbcType=INTEGER},
      pay_sn = #{paySn,jdbcType=BIGINT},
      payment_client_type = #{paymentClientType,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      predeposit_amount = #{predepositAmount,jdbcType=DECIMAL},
      real_pay_amount = #{realPayAmount,jdbcType=DECIMAL},
      store_id = #{storeId,jdbcType=INTEGER},
      happy_gold_amount = #{happyGoldAmount,jdbcType=DECIMAL}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.OrdersBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from orders_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>