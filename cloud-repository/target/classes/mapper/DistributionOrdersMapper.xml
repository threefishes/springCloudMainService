<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.DistributionOrdersMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.DistributionOrders">
    <id column="distribution_orders_id" jdbcType="INTEGER" property="distributionOrdersId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="commission_rate" jdbcType="INTEGER" property="commissionRate" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="distribution_orders_type" jdbcType="INTEGER" property="distributionOrdersType" />
    <result column="distribution_store_pay" jdbcType="INTEGER" property="distributionStorePay" />
    <result column="distribution_store_pay_time" jdbcType="TIMESTAMP" property="distributionStorePayTime" />
    <result column="distributor_id" jdbcType="INTEGER" property="distributorId" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="orders_finish_time" jdbcType="TIMESTAMP" property="ordersFinishTime" />
    <result column="orders_goods_id" jdbcType="INTEGER" property="ordersGoodsId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="charge_id" jdbcType="INTEGER" property="chargeId" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="is_store_up" jdbcType="INTEGER" property="isStoreUp" />
    <result column="is_award" jdbcType="INTEGER" property="isAward" />
    <result column="distributor_rank" jdbcType="INTEGER" property="distributorRank" />
    <result column="distributor_commission_amount" jdbcType="DECIMAL" property="distributorCommissionAmount" />
    <result column="charge_commission_amount" jdbcType="DECIMAL" property="chargeCommissionAmount" />
    <result column="manager_commission_amount" jdbcType="DECIMAL" property="managerCommissionAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    distribution_orders_id, add_time, commission_rate, common_id, distribution_orders_type, 
    distribution_store_pay, distribution_store_pay_time, distributor_id, finish_time, 
    member_id, orders_finish_time, orders_goods_id, store_id, charge_id, manager_id, 
    is_store_up, is_award, distributor_rank, distributor_commission_amount, charge_commission_amount, 
    manager_commission_amount
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from distribution_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from distribution_orders
    where distribution_orders_id = #{distributionOrdersId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from distribution_orders
    where distribution_orders_id = #{distributionOrdersId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrdersExample">
    delete from distribution_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="distribution_orders_id" keyProperty="distributionOrdersId" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrders" useGeneratedKeys="true">
    insert into distribution_orders (add_time, commission_rate, common_id, 
      distribution_orders_type, distribution_store_pay, 
      distribution_store_pay_time, distributor_id, 
      finish_time, member_id, orders_finish_time, 
      orders_goods_id, store_id, charge_id, 
      manager_id, is_store_up, is_award, 
      distributor_rank, distributor_commission_amount, 
      charge_commission_amount, manager_commission_amount
      )
    values (#{addTime,jdbcType=TIMESTAMP}, #{commissionRate,jdbcType=INTEGER}, #{commonId,jdbcType=INTEGER}, 
      #{distributionOrdersType,jdbcType=INTEGER}, #{distributionStorePay,jdbcType=INTEGER}, 
      #{distributionStorePayTime,jdbcType=TIMESTAMP}, #{distributorId,jdbcType=INTEGER}, 
      #{finishTime,jdbcType=TIMESTAMP}, #{memberId,jdbcType=INTEGER}, #{ordersFinishTime,jdbcType=TIMESTAMP}, 
      #{ordersGoodsId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{chargeId,jdbcType=INTEGER}, 
      #{managerId,jdbcType=INTEGER}, #{isStoreUp,jdbcType=INTEGER}, #{isAward,jdbcType=INTEGER}, 
      #{distributorRank,jdbcType=INTEGER}, #{distributorCommissionAmount,jdbcType=DECIMAL}, 
      #{chargeCommissionAmount,jdbcType=DECIMAL}, #{managerCommissionAmount,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" keyColumn="distribution_orders_id" keyProperty="distributionOrdersId" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrders" useGeneratedKeys="true">
    insert into distribution_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addTime != null">
        add_time,
      </if>
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="commonId != null">
        common_id,
      </if>
      <if test="distributionOrdersType != null">
        distribution_orders_type,
      </if>
      <if test="distributionStorePay != null">
        distribution_store_pay,
      </if>
      <if test="distributionStorePayTime != null">
        distribution_store_pay_time,
      </if>
      <if test="distributorId != null">
        distributor_id,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="ordersFinishTime != null">
        orders_finish_time,
      </if>
      <if test="ordersGoodsId != null">
        orders_goods_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="chargeId != null">
        charge_id,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="isStoreUp != null">
        is_store_up,
      </if>
      <if test="isAward != null">
        is_award,
      </if>
      <if test="distributorRank != null">
        distributor_rank,
      </if>
      <if test="distributorCommissionAmount != null">
        distributor_commission_amount,
      </if>
      <if test="chargeCommissionAmount != null">
        charge_commission_amount,
      </if>
      <if test="managerCommissionAmount != null">
        manager_commission_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="distributionOrdersType != null">
        #{distributionOrdersType,jdbcType=INTEGER},
      </if>
      <if test="distributionStorePay != null">
        #{distributionStorePay,jdbcType=INTEGER},
      </if>
      <if test="distributionStorePayTime != null">
        #{distributionStorePayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="distributorId != null">
        #{distributorId,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="ordersFinishTime != null">
        #{ordersFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersGoodsId != null">
        #{ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="chargeId != null">
        #{chargeId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="isStoreUp != null">
        #{isStoreUp,jdbcType=INTEGER},
      </if>
      <if test="isAward != null">
        #{isAward,jdbcType=INTEGER},
      </if>
      <if test="distributorRank != null">
        #{distributorRank,jdbcType=INTEGER},
      </if>
      <if test="distributorCommissionAmount != null">
        #{distributorCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="chargeCommissionAmount != null">
        #{chargeCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="managerCommissionAmount != null">
        #{managerCommissionAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrdersExample" resultType="java.lang.Long">
    select count(*) from distribution_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update distribution_orders
    <set>
      <if test="record.distributionOrdersId != null">
        distribution_orders_id = #{record.distributionOrdersId,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commissionRate != null">
        commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.distributionOrdersType != null">
        distribution_orders_type = #{record.distributionOrdersType,jdbcType=INTEGER},
      </if>
      <if test="record.distributionStorePay != null">
        distribution_store_pay = #{record.distributionStorePay,jdbcType=INTEGER},
      </if>
      <if test="record.distributionStorePayTime != null">
        distribution_store_pay_time = #{record.distributionStorePayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.distributorId != null">
        distributor_id = #{record.distributorId,jdbcType=INTEGER},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.ordersFinishTime != null">
        orders_finish_time = #{record.ordersFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ordersGoodsId != null">
        orders_goods_id = #{record.ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.chargeId != null">
        charge_id = #{record.chargeId,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.isStoreUp != null">
        is_store_up = #{record.isStoreUp,jdbcType=INTEGER},
      </if>
      <if test="record.isAward != null">
        is_award = #{record.isAward,jdbcType=INTEGER},
      </if>
      <if test="record.distributorRank != null">
        distributor_rank = #{record.distributorRank,jdbcType=INTEGER},
      </if>
      <if test="record.distributorCommissionAmount != null">
        distributor_commission_amount = #{record.distributorCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.chargeCommissionAmount != null">
        charge_commission_amount = #{record.chargeCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.managerCommissionAmount != null">
        manager_commission_amount = #{record.managerCommissionAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update distribution_orders
    set distribution_orders_id = #{record.distributionOrdersId,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      distribution_orders_type = #{record.distributionOrdersType,jdbcType=INTEGER},
      distribution_store_pay = #{record.distributionStorePay,jdbcType=INTEGER},
      distribution_store_pay_time = #{record.distributionStorePayTime,jdbcType=TIMESTAMP},
      distributor_id = #{record.distributorId,jdbcType=INTEGER},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      member_id = #{record.memberId,jdbcType=INTEGER},
      orders_finish_time = #{record.ordersFinishTime,jdbcType=TIMESTAMP},
      orders_goods_id = #{record.ordersGoodsId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      charge_id = #{record.chargeId,jdbcType=INTEGER},
      manager_id = #{record.managerId,jdbcType=INTEGER},
      is_store_up = #{record.isStoreUp,jdbcType=INTEGER},
      is_award = #{record.isAward,jdbcType=INTEGER},
      distributor_rank = #{record.distributorRank,jdbcType=INTEGER},
      distributor_commission_amount = #{record.distributorCommissionAmount,jdbcType=DECIMAL},
      charge_commission_amount = #{record.chargeCommissionAmount,jdbcType=DECIMAL},
      manager_commission_amount = #{record.managerCommissionAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrders">
    update distribution_orders
    <set>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="distributionOrdersType != null">
        distribution_orders_type = #{distributionOrdersType,jdbcType=INTEGER},
      </if>
      <if test="distributionStorePay != null">
        distribution_store_pay = #{distributionStorePay,jdbcType=INTEGER},
      </if>
      <if test="distributionStorePayTime != null">
        distribution_store_pay_time = #{distributionStorePayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="distributorId != null">
        distributor_id = #{distributorId,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="ordersFinishTime != null">
        orders_finish_time = #{ordersFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersGoodsId != null">
        orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="chargeId != null">
        charge_id = #{chargeId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="isStoreUp != null">
        is_store_up = #{isStoreUp,jdbcType=INTEGER},
      </if>
      <if test="isAward != null">
        is_award = #{isAward,jdbcType=INTEGER},
      </if>
      <if test="distributorRank != null">
        distributor_rank = #{distributorRank,jdbcType=INTEGER},
      </if>
      <if test="distributorCommissionAmount != null">
        distributor_commission_amount = #{distributorCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="chargeCommissionAmount != null">
        charge_commission_amount = #{chargeCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="managerCommissionAmount != null">
        manager_commission_amount = #{managerCommissionAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where distribution_orders_id = #{distributionOrdersId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrders">
    update distribution_orders
    set add_time = #{addTime,jdbcType=TIMESTAMP},
      commission_rate = #{commissionRate,jdbcType=INTEGER},
      common_id = #{commonId,jdbcType=INTEGER},
      distribution_orders_type = #{distributionOrdersType,jdbcType=INTEGER},
      distribution_store_pay = #{distributionStorePay,jdbcType=INTEGER},
      distribution_store_pay_time = #{distributionStorePayTime,jdbcType=TIMESTAMP},
      distributor_id = #{distributorId,jdbcType=INTEGER},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      member_id = #{memberId,jdbcType=INTEGER},
      orders_finish_time = #{ordersFinishTime,jdbcType=TIMESTAMP},
      orders_goods_id = #{ordersGoodsId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      charge_id = #{chargeId,jdbcType=INTEGER},
      manager_id = #{managerId,jdbcType=INTEGER},
      is_store_up = #{isStoreUp,jdbcType=INTEGER},
      is_award = #{isAward,jdbcType=INTEGER},
      distributor_rank = #{distributorRank,jdbcType=INTEGER},
      distributor_commission_amount = #{distributorCommissionAmount,jdbcType=DECIMAL},
      charge_commission_amount = #{chargeCommissionAmount,jdbcType=DECIMAL},
      manager_commission_amount = #{managerCommissionAmount,jdbcType=DECIMAL}
    where distribution_orders_id = #{distributionOrdersId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.DistributionOrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from distribution_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>