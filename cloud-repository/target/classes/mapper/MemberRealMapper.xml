<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.MemberRealMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.MemberReal">
    <id column="real_id" jdbcType="INTEGER" property="realId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="auth_state" jdbcType="INTEGER" property="authState" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="old_bank_name" jdbcType="VARCHAR" property="oldBankName" />
    <result column="old_bank_account" jdbcType="VARCHAR" property="oldBankAccount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="auth_handle_time" jdbcType="TIMESTAMP" property="authHandleTime" />
    <result column="error_code" jdbcType="VARCHAR" property="errorCode" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="work_number" jdbcType="VARCHAR" property="workNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    real_id, real_name, mobile, identity, auth_state, status, member_id, bank_name, bank_account, 
    old_bank_name, old_bank_account, remark, create_time, update_time, auth_handle_time, 
    error_code, error_msg, work_number
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.MemberRealExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from member_real
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_real
    where real_id = #{realId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_real
    where real_id = #{realId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.MemberRealExample">
    delete from member_real
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="real_id" keyProperty="realId" parameterType="cn.threefishes.cloudrepository.entity.MemberReal" useGeneratedKeys="true">
    insert into member_real (real_name, mobile, identity, 
      auth_state, status, member_id, 
      bank_name, bank_account, old_bank_name, 
      old_bank_account, remark, create_time, 
      update_time, auth_handle_time, error_code, 
      error_msg, work_number)
    values (#{realName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, 
      #{authState,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, 
      #{bankName,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{oldBankName,jdbcType=VARCHAR}, 
      #{oldBankAccount,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{authHandleTime,jdbcType=TIMESTAMP}, #{errorCode,jdbcType=VARCHAR}, 
      #{errorMsg,jdbcType=VARCHAR}, #{workNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="real_id" keyProperty="realId" parameterType="cn.threefishes.cloudrepository.entity.MemberReal" useGeneratedKeys="true">
    insert into member_real
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="realName != null">
        real_name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="authState != null">
        auth_state,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="oldBankName != null">
        old_bank_name,
      </if>
      <if test="oldBankAccount != null">
        old_bank_account,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="authHandleTime != null">
        auth_handle_time,
      </if>
      <if test="errorCode != null">
        error_code,
      </if>
      <if test="errorMsg != null">
        error_msg,
      </if>
      <if test="workNumber != null">
        work_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="authState != null">
        #{authState,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="oldBankName != null">
        #{oldBankName,jdbcType=VARCHAR},
      </if>
      <if test="oldBankAccount != null">
        #{oldBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authHandleTime != null">
        #{authHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="workNumber != null">
        #{workNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.MemberRealExample" resultType="java.lang.Long">
    select count(*) from member_real
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_real
    <set>
      <if test="record.realId != null">
        real_id = #{record.realId,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.authState != null">
        auth_state = #{record.authState,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.oldBankName != null">
        old_bank_name = #{record.oldBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.oldBankAccount != null">
        old_bank_account = #{record.oldBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authHandleTime != null">
        auth_handle_time = #{record.authHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.errorCode != null">
        error_code = #{record.errorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMsg != null">
        error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.workNumber != null">
        work_number = #{record.workNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_real
    set real_id = #{record.realId,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      auth_state = #{record.authState,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      old_bank_name = #{record.oldBankName,jdbcType=VARCHAR},
      old_bank_account = #{record.oldBankAccount,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      auth_handle_time = #{record.authHandleTime,jdbcType=TIMESTAMP},
      error_code = #{record.errorCode,jdbcType=VARCHAR},
      error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      work_number = #{record.workNumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.MemberReal">
    update member_real
    <set>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="authState != null">
        auth_state = #{authState,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="oldBankName != null">
        old_bank_name = #{oldBankName,jdbcType=VARCHAR},
      </if>
      <if test="oldBankAccount != null">
        old_bank_account = #{oldBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authHandleTime != null">
        auth_handle_time = #{authHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorCode != null">
        error_code = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="workNumber != null">
        work_number = #{workNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where real_id = #{realId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.MemberReal">
    update member_real
    set real_name = #{realName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      auth_state = #{authState,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      old_bank_name = #{oldBankName,jdbcType=VARCHAR},
      old_bank_account = #{oldBankAccount,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      auth_handle_time = #{authHandleTime,jdbcType=TIMESTAMP},
      error_code = #{errorCode,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      work_number = #{workNumber,jdbcType=VARCHAR}
    where real_id = #{realId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.MemberRealExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from member_real
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>