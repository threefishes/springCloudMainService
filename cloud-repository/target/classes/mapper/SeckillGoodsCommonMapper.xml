<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.threefishes.cloudrepository.dao.SeckillGoodsCommonMapper">
  <resultMap id="BaseResultMap" type="cn.threefishes.cloudrepository.entity.SeckillGoodsCommon">
    <id column="seckill_common_id" jdbcType="INTEGER" property="seckillCommonId" />
    <result column="common_id" jdbcType="INTEGER" property="commonId" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_sale_num" jdbcType="INTEGER" property="goodsSaleNum" />
    <result column="goods_storage" jdbcType="INTEGER" property="goodsStorage" />
    <result column="schedule_id" jdbcType="INTEGER" property="scheduleId" />
    <result column="schedule_state" jdbcType="INTEGER" property="scheduleState" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="verify_remark" jdbcType="VARCHAR" property="verifyRemark" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seckill_common_id, common_id, end_time, goods_price, goods_sale_num, goods_storage, 
    schedule_id, schedule_state, start_time, verify_remark, sort
  </sql>
  <select id="selectByExample" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from seckill_goods_common
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seckill_goods_common
    where seckill_common_id = #{seckillCommonId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seckill_goods_common
    where seckill_common_id = #{seckillCommonId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommonExample">
    delete from seckill_goods_common
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="seckill_common_id" keyProperty="seckillCommonId" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommon" useGeneratedKeys="true">
    insert into seckill_goods_common (common_id, end_time, goods_price, 
      goods_sale_num, goods_storage, schedule_id, 
      schedule_state, start_time, verify_remark, 
      sort)
    values (#{commonId,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, #{goodsPrice,jdbcType=DECIMAL}, 
      #{goodsSaleNum,jdbcType=INTEGER}, #{goodsStorage,jdbcType=INTEGER}, #{scheduleId,jdbcType=INTEGER}, 
      #{scheduleState,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{verifyRemark,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="seckill_common_id" keyProperty="seckillCommonId" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommon" useGeneratedKeys="true">
    insert into seckill_goods_common
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commonId != null">
        common_id,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsSaleNum != null">
        goods_sale_num,
      </if>
      <if test="goodsStorage != null">
        goods_storage,
      </if>
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="scheduleState != null">
        schedule_state,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="verifyRemark != null">
        verify_remark,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commonId != null">
        #{commonId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsSaleNum != null">
        #{goodsSaleNum,jdbcType=INTEGER},
      </if>
      <if test="goodsStorage != null">
        #{goodsStorage,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="scheduleState != null">
        #{scheduleState,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyRemark != null">
        #{verifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommonExample" resultType="java.lang.Long">
    select count(*) from seckill_goods_common
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update seckill_goods_common
    <set>
      <if test="record.seckillCommonId != null">
        seckill_common_id = #{record.seckillCommonId,jdbcType=INTEGER},
      </if>
      <if test="record.commonId != null">
        common_id = #{record.commonId,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsSaleNum != null">
        goods_sale_num = #{record.goodsSaleNum,jdbcType=INTEGER},
      </if>
      <if test="record.goodsStorage != null">
        goods_storage = #{record.goodsStorage,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleState != null">
        schedule_state = #{record.scheduleState,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verifyRemark != null">
        verify_remark = #{record.verifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update seckill_goods_common
    set seckill_common_id = #{record.seckillCommonId,jdbcType=INTEGER},
      common_id = #{record.commonId,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_sale_num = #{record.goodsSaleNum,jdbcType=INTEGER},
      goods_storage = #{record.goodsStorage,jdbcType=INTEGER},
      schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      schedule_state = #{record.scheduleState,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      verify_remark = #{record.verifyRemark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommon">
    update seckill_goods_common
    <set>
      <if test="commonId != null">
        common_id = #{commonId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsSaleNum != null">
        goods_sale_num = #{goodsSaleNum,jdbcType=INTEGER},
      </if>
      <if test="goodsStorage != null">
        goods_storage = #{goodsStorage,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        schedule_id = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="scheduleState != null">
        schedule_state = #{scheduleState,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyRemark != null">
        verify_remark = #{verifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where seckill_common_id = #{seckillCommonId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommon">
    update seckill_goods_common
    set common_id = #{commonId,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_sale_num = #{goodsSaleNum,jdbcType=INTEGER},
      goods_storage = #{goodsStorage,jdbcType=INTEGER},
      schedule_id = #{scheduleId,jdbcType=INTEGER},
      schedule_state = #{scheduleState,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      verify_remark = #{verifyRemark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where seckill_common_id = #{seckillCommonId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.threefishes.cloudrepository.entity.SeckillGoodsCommonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from seckill_goods_common
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>